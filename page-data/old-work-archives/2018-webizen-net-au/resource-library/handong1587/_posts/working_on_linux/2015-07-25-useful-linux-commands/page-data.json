{
    "componentChunkName": "component---node-modules-gatsby-theme-primer-wiki-src-templates-post-query-js",
    "path": "/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/working_on_linux/2015-07-25-useful-linux-commands/",
    "result": {"data":{"mdx":{"id":"97820b0c-191c-5b98-ab67-f4fa79fa582e","tableOfContents":{"items":[{"url":"#packunpackcompressuncompress","title":"Pack/Unpack/Compress/Uncompress","items":[{"url":"#wiew-a-detailed-table-of-contents-for-an-archive","title":"Wiew a detailed table of contents for an archive"}]},{"url":"#print-info","title":"Print info"},{"url":"#download","title":"Download"},{"url":"#transfer-files","title":"Transfer Files"},{"url":"#rename","title":"Rename"},{"url":"#count","title":"Count"},{"url":"#search","title":"Search"},{"url":"#gdb","title":"GDB"},{"url":"#pdb","title":"pdb"},{"url":"#ctags","title":"Ctags"},{"url":"#screen","title":"screen"},{"url":"#nohup","title":"nohup"},{"url":"#cscope","title":"cscope"},{"url":"#vim","title":"Vim"},{"url":"#matlab","title":"Matlab"},{"url":"#hadoop","title":"Hadoop"},{"url":"#others","title":"Others"}]},"fields":{"title":"Useful Linux Commands","slug":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/working_on_linux/2015-07-25-useful-linux-commands/","url":"https://devdocs.webizen.org/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/working_on_linux/2015-07-25-useful-linux-commands/","editUrl":"https://github.com/webizenai/devdocs/tree/main/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/working_on_linux/2015-07-25-useful-linux-commands.md","lastUpdatedAt":"2022-12-28T19:22:29.000Z","lastUpdated":"12/28/2022","gitCreatedAt":"2022-12-28T19:22:29.000Z","shouldShowTitle":true},"frontmatter":{"title":"Useful Linux Commands","description":null,"imageAlt":null,"tags":[],"date":"2015-07-25T00:00:00.000Z","dateModified":null,"language":null,"seoTitle":null,"image":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"layout\": \"post\",\n  \"category\": \"linux_study\",\n  \"title\": \"Useful Linux Commands\",\n  \"date\": \"2015-07-25T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"packunpackcompressuncompress\"\n  }, \"Pack/Unpack/Compress/Uncompress\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"file type\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Pack/Compress\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Unpack/Uncompress\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \".tar\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"tar cvf FileName.tar DirName\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"tar xvf FileName.tar\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \".gz\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"gzip FileName\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"gunzip FileName.gz\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \".gz\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"gzip FileName\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"gzip -d FileName.gz\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \".tar.gz, .tgz\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"tar -zcvf FileName.tar.gz DirName\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"tar zxvf FileName.tar.gz\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \".bz2\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"bzip2 -z FileName\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"bzip2 -d FileName.bz2\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \".bz2\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"bunzip2 FileName.bz2\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \".tar.bz2\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"tar jcvf FileName.tar.bz2 DirName\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"tar jxvf FileName.tar.bz2\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \".bz\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"bzip2 -d FileName.bz\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \".bz\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"bunzip2 FileName.bz\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \".tar.bz\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"tar jxvf FileName.tar.bz\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \".Z\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"compress FileName\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"uncompress FileName.Z\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \".tar.Z\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"tar Zcvf FileName.tar.Z DirName\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"tar Zxvf FileName.tar.Z\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \".zip\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"zip FileName.zip DirName\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"unzip FileName.zip\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \".zip\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"zip -r target.zip dir1 dir2 dir3\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"unzip FileName.zip -d targetFolder\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \".rar\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"rar a FileName.rar DirName\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"rar x FileName.rar\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \".lha\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"lha -a FileName.lha FileName\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"lha -e FileName.lha\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \".rpm\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"rpm2cpio FileName.rpm \", \"|\", \" cpio -div\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \".deb\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"ar x example.deb\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \".deb\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"ar p FileName.deb data.tar.gz \", \"|\", \" tar zx\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \".deb\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"dpkg -x somepackage.deb ~/temp/\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \".xz\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"xz -d myfiles.tar.xz\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \".xz\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"tar -xf myfiles.tar\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \".xz\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"tar -Jxf myfiles.tar.xz\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \".7z\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"7za a myfiles.7z myfiles/\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"7za x myfiles.7z\")))), mdx(\"p\", null, \"For compress/uncompress those files:\"), mdx(\"p\", null, \".tar .tgz .tar.gz .tar.Z .tar.bz .tar.bz2 .zip .cpio .rpm .deb .slp .arj .rar .ace .lha .lzh .lzx .lzs .arc .sda .sfx .lnx .zoo .cab .kar .cpt .pit .sit .sea\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"compress:   sEx a FileName.* FileName\\nuncompress: sEx x FileName.*\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"unzip a tar gz archive to a specific destination\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"cd /root/Desktop/folder\\ntar xf /root/Documents/file.tar.gz\\n\")), mdx(\"p\", null, \"or:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"tar xf file.tar.gz -C /root/Desktop/folder\\n\")), mdx(\"h2\", {\n    \"id\": \"wiew-a-detailed-table-of-contents-for-an-archive\"\n  }, \"Wiew a detailed table of contents for an archive\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"file type\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"view contents cmd\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \".tar.gz\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"tar -tvf my-data.tar.gz\")))), mdx(\"h1\", {\n    \"id\": \"print-info\"\n  }, \"Print info\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"task\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"command\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Print system info\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"cat /proc/version\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Print kernel version\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"uname -a\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Print distribution information\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"lsb_release -a\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Print software info\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"whereis SOFEWARE\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"which SOFEWARE\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"locate SOFEWARE\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Print CPU info\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"cat /proc/cpuinfo\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"dmesg \", \"|\", \" grep -i xeon\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Print memory info\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"cat /proc/meminfo\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"free -m\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Print pid info\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"ps aux \", \"|\", \" grep 'target_pid'\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Print graphics card version\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"nvcc --version\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Print graphics card GPU info\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"lspci  \", \"|\", \" grep -i vga\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Print graphics card GPU running info\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"nvidia-smi\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Print graphics card GPU info dynamically\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"watch -n0.1 nvidia-smi\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Print disk free space\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"df -h\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"df -hl\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Print current folder size\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"du -sh DIRNAME\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Print target folder volume\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"du -sh\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Print target folder volume (in MB)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"du -sm\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"left\"\n  }, \"Prints one entry per line of output (bare format)\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"ls -1a\")))), mdx(\"p\", null, \"CuDNN Version Check:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"cat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2\\n\")), mdx(\"p\", null, \"Print lines 20 to 40:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"sed -n '20,40p' file_name\\n\")), mdx(\"p\", null, \"or:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"sed -n '20,40p;41q' file_name\\n\")), mdx(\"p\", null, \"or:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"awk 'FNR>=20 && FNR<=40' file_name\\n\")), mdx(\"p\", null, \"To print range with other specific line (5 - 8 & 10):\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"$ sed -n -e 5,8p -e 10p file\\nLine 5\\nLine 6\\nLine 7\\nLine 8\\nLine 10\\n\")), mdx(\"h1\", {\n    \"id\": \"download\"\n  }, \"Download\"), mdx(\"p\", null, \"Download file:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"wget \\\"http://domain.com/directory/4?action=AttachFile&do=view&target=file.tgz\\\"\\n\")), mdx(\"p\", null, \"Download file to specific directory:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"wget -O /home/omio/Desktop/ \\\"http://thecanadiantestbox.x10.mx/CC.zip\\\"\\n\")), mdx(\"p\", null, \"Download all files from a folder on a website or FTP:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"wget -r --no-parent --reject \\\"index.html*\\\" http://vision.cs.utexas.edu/voc/\\n\")), mdx(\"h1\", {\n    \"id\": \"transfer-files\"\n  }, \"Transfer Files\"), mdx(\"p\", null, \"Remote transfer files, remote -> local:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"scp account@111.111.111.111:/path/to/remote/file /path/to/local/\\n\")), mdx(\"p\", null, \"Remote transfer files, local -> remote:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"scp /path/to/local/file account@111.111.111.111:/path/to/remote/\\n\")), mdx(\"p\", null, \"Print directory structure:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"ls -l -R\\n\")), mdx(\"p\", null, \"Print folder in current directory:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"ls -lF |grep /\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"ls -l |grep '^d'\\n\")), mdx(\"p\", null, \"Print history command:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"history\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"history | less\\n\")), mdx(\"h1\", {\n    \"id\": \"rename\"\n  }, \"Rename\"), mdx(\"p\", null, \"Perl-based rename commands (-n: test commands; -v: print renamed files):\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"rename -n 's/\\\\.htm$/\\\\.html/' \\\\*.htm\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"rename -v 's/\\\\.htm$/\\\\.html/' \\\\*.htm\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"1. Replace first letter of all files' name with 'q':\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"for i in `ls`; do mv -f $i `echo $i | sed 's/^./q/'`; done\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"same with a bash script:\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"for file in `ls`\\ndo\\n  newfile =`echo $i | sed 's/^./q/'`\\n\\u3000mv $file $newfile\\ndone\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"2. Replace first 5 letters with 'abcde'\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"for i in `ls`; do mv -f $i `echo $i | sed 's/^...../abcde/'`;\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"3. Replace last 5 letters with 'abcde'\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"for i in `ls`; do mv -f $i `echo $i | sed 's/.....$/abcde/'`;\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"4. Add 'abcde' to the front\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"for i in `ls`; do mv -f $i `echo \\\"abcde\\\"$i`; done\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"5. Convert all lower case to upper case\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"for i in `ls`; do mv -f $i `echo $i | tr a-z A-Z`; done\\n\")), mdx(\"h1\", {\n    \"id\": \"count\"\n  }, \"Count\"), mdx(\"p\", null, \"Count lines in a document\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"wc -l /dir/file.txt\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"cat /dir/file.txt | wc -l\\n\")), mdx(\"p\", null, \"Filter and count only lines with pattern, or with -v to invert match\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"grep -w \\\"pattern\\\" -c file\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"grep -w \\\"pattern\\\" -c -v file\\n\")), mdx(\"p\", null, \"Count files in the current directory:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"ls -l | grep \\u201C^-\\u201D | wc -l\\n\")), mdx(\"p\", null, \"example: counting all js files in directory \\\"/home/account/\\\" (recursively):\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"ls -lR /home/account | grep js | wc -l\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"ls -l \\\"/home/account\\\" | grep \\\"js\\\" | wc -l\\n\")), mdx(\"p\", null, \"Count files in the current directory, recursively:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"ls -lR | grep \\u201C^-\\u201D | wc -l\\n\")), mdx(\"p\", null, \"Count folders in the current directory, recursively:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"ls -lR | grep \\u201C^d\\u201D | wc -l\\n\")), mdx(\"p\", null, \"Count words in a file:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"grep -o objStr  filename|wc -l\\ngrep -o \\u2018objStr1\\\\|objStr2'  filename|wc -l\\n\")), mdx(\"p\", null, \"Count words in a file under Vim:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \":%s/objStr//gn\\n\")), mdx(\"h1\", {\n    \"id\": \"search\"\n  }, \"Search\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Search for a file by its file name\")), mdx(\"p\", null, \"The command below will search for the query in the current directory and any subdirectories.\\nUsing -iname instead of -name ignores the case of your query. The -name command is case-sensitive.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"find -iname \\\"filename\\\"\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Finding all files containing a text string\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"grep -rnw '/path/to/somewhere/' -e \\\"pattern\\\"\\n\\ngrep --include=\\\\*.{c,h} -rnw '/path/to/somewhere/' -e \\\"pattern\\\"\\n\\ngrep --exclude=*.o -rnw '/path/to/somewhere/' -e \\\"pattern\\\"\\n\\ngrep --exclude-dir={dir1,dir2,*.dst} -rnw '/path/to/somewhere/' -e \\\"pattern\\\"\\n\")), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"-r or -R is recursive,\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"-n is line number, and\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"-w stands match the whole word.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"-l (lower-case L) can be added to just give the file name of matching files.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Along with these, --exclude or --include parameter could be used for efficient searching.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Finding all files containing a text string on Linux\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"stackoverflow: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://stackoverflow.com/questions/16956810/finding-all-files-containing-a-text-string-on-linux\"\n  }, \"http://stackoverflow.com/questions/16956810/finding-all-files-containing-a-text-string-on-linux\"))), mdx(\"p\", null, \"Count occurrences of a char(e.g, 'aaa') in plain text file\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"fgrep -o 'aaa' <file> | wc -l\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"references\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"How to Find a File in Linux\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.wikihow.com/Find-a-File-in-Linux\"\n  }, \"http://www.wikihow.com/Find-a-File-in-Linux\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"How to find files in Linux using 'find'\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.codecoffee.com/tipsforlinux/articles/21.html\"\n  }, \"http://www.codecoffee.com/tipsforlinux/articles/21.html\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"35 Practical Examples of Linux Find Command\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.tecmint.com/35-practical-examples-of-linux-find-command/\"\n  }, \"http://www.tecmint.com/35-practical-examples-of-linux-find-command/\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"How to use grep to search for strings in files on the shell\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.howtoforge.com/tutorial/linux-grep-command/\"\n  }, \"https://www.howtoforge.com/tutorial/linux-grep-command/\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Find All Files of a Particular Size\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"find /home/ -type f -size +512k -exec ls -lh {} \\\\;\\n\")), mdx(\"p\", null, \"As units you can use:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"    b \\u2013 for 512-byte blocks (this is the default if no suffix is used)\\n    c \\u2013 for bytes\\n    w \\u2013 for two-byte words\\n    k \\u2013 for Kilobytes (units of 1024 bytes)\\n    M \\u2013 for Megabytes (units of 1048576 bytes)\\n    G \\u2013 for Gigabytes (units of 1073741824 bytes)\\n\")), mdx(\"p\", null, \"ref: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.ducea.com/2008/02/12/linux-tips-find-all-files-of-a-particular-size/\"\n  }, \"http://www.ducea.com/2008/02/12/linux-tips-find-all-files-of-a-particular-size/\")), mdx(\"h1\", {\n    \"id\": \"gdb\"\n  }, \"GDB\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"GDB reference card\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://web.stanford.edu/class/cs107/gdb_refcard.pdf\"\n  }, \"https://web.stanford.edu/class/cs107/gdb_refcard.pdf\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"GDB Tutorial: A Walkthrough with Examples\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"slides: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.cs.umd.edu/~srhuang/teaching/cmsc212/gdb-tutorial-handout.pdf\"\n  }, \"https://www.cs.umd.edu/~srhuang/teaching/cmsc212/gdb-tutorial-handout.pdf\"))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"GNU GDB Debugger Command Cheat Sheet\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.yolinux.com/TUTORIALS/GDB-Commands.html\"\n  }, \"http://www.yolinux.com/TUTORIALS/GDB-Commands.html\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Cheat Sheet\"), \":\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"shortcut\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"command\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"explanation\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"q\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"quit\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"h\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"help\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"h command\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"help command\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"print command meaning\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"b\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"break\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"example: b 5\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"disable codenum\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"enable codenum\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"condition codenum xxx\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"set break condition\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"c\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"continue\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"n\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"next\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"s\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"step\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  })), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"w\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"print code in current execution point\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"j codenum\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"jump to line j\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"l\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"list nearby code\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"p\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"print var value\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"a\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"print current func/var value\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Enter\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"repeat last command\")))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"gdb --arg python demo.py 2>&1 | tee demo.log\\n\")), mdx(\"h1\", {\n    \"id\": \"pdb\"\n  }, \"pdb\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"import pdb\\npdb.set_trace()\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"exit pdb and allow program to continue\")), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"To remove the breakpoint (if inserted it manually):\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"(Pdb) break\\nNum Type         Disp Enb   Where\\n1   breakpoint   keep yes   at /path/to/test.py:5\\n(Pdb) clear 1\\nDeleted breakpoint 1\\n(Pdb) continue\\n\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"if you're using pdb.set_trace(), you can try this (although if you're using pdb in more fancy ways, this may break things...)\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"(Pdb) pdb.set_trace = lambda: None  # This replaces the set_trace() function!\\n(Pdb) continue\\n# No more breaks!\\n\")))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ref: \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://stackoverflow.com/questions/17820618/how-to-exit-pdb-and-allow-program-to-continue\"\n  }, \"http://stackoverflow.com/questions/17820618/how-to-exit-pdb-and-allow-program-to-continue\"))), mdx(\"h1\", {\n    \"id\": \"ctags\"\n  }, \"Ctags\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"command\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"explanation\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"ctags \\u2013R *\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Generate tags files in source code root directory\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"vim -t func/var\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"find func/var definition\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \":ts\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"give a list if func/var has multiple definitions\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Ctrl+]\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"jump to definition\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Ctrl+T\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"jump back\")))), mdx(\"h1\", {\n    \"id\": \"screen\"\n  }, \"screen\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"task\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"command\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Run program in screen mode\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"screen python demo.py --gpu 1\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Detach screen\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Ctrl + a, c\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Detach screen\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Ctrl + a, d\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Re-connect screen\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"screen -r pid\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Display all screens\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"screen -ls\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Delete screen\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"kill pid\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Naming a screen\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"screen -S sessionName\")))), mdx(\"h1\", {\n    \"id\": \"nohup\"\n  }, \"nohup\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"nohup command-with-options &\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"nohup xxx.sh 1 > log.txt 2>&1 &\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"nohup - get the process ID to kill a nohup process\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"ps -ef | grep \\\"command name\\\"\\n\")), mdx(\"p\", null, \"or:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"nohup command-with-options & \\necho $! > save_pid.txt\\nkill -9 `cat save_pid.txt`\\n\")), mdx(\"h1\", {\n    \"id\": \"cscope\"\n  }, \"cscope\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"task\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"command\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Generate Cscope database\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"find . -name \\\"\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \".c\\\" -o -name \\\"\"), \".cc\\\" -o -name \\\"\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \".cpp\\\" -o -name \\\"\"), \".cu\\\" -o -name \\\"\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \".h\\\" -o -name \\\"\"), \".hpp\\\" -o -name \\\"\", mdx(\"em\", {\n    parentName: \"td\"\n  }, \".py\\\" -o -name \\\"\"), \".proto\\\" > cscope.files\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Build a Cscope reference database\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"cscope -q -R -b -i cscope.files\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Start the Cscope browser\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"cscope -d\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Exit a Cscope browser\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Ctrl + d\")))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Cheat Sheet\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"-b  Build the cross-reference only.\\n-C  Ignore letter case when searching.\\n-c  Use only ASCII characters in the cross-ref file (don\\u2019t compress).\\n-d  Do not update the cross-reference.\\n-e  Suppress the -e command prompt between files.\\n-F  symfile Read symbol reference lines from symfile.\\n-f  reffile Use reffile as cross-ref file name instead of cscope.out.\\n-h  This help screen.\\n-I  incdir Look in incdir for any #include files.\\n-i  namefile Browse through files listed in namefile, instead of cscope.files\\n-k  Kernel Mode \\u2013 don\\u2019t use /usr/include for #include files.\\n-L  Do a single search with line-oriented output.\\n-l  Line-oriented interface.\\n-num  pattern Go to input field num (counting from 0) and find pattern.\\n-P  path Prepend path to relative file names in pre-built cross-ref file.\\n-p  n Display the last n file path components.\\n-q  Build an inverted index for quick symbol searching.\\n-R  Recurse directories for files.\\n-s  dir Look in dir for additional source files.\\n-T  Use only the first eight characters to match against C symbols.\\n-U  Check file time stamps.\\n-u  Unconditionally build the cross-reference file.\\n-v  Be more verbose in line mode.\\n-V  Print the version number.\\n\")), mdx(\"h1\", {\n    \"id\": \"vim\"\n  }, \"Vim\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Shifting blocks visually\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://vim.wikia.com/wiki/Shifting_blocks_visually\"\n  }, \"http://vim.wikia.com/wiki/Shifting_blocks_visually\")), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"mode\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"task\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"command\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"normal mode\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"indent the current line\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"type \", \">\", \">\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"normal mode\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"unindent the current line\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"type \\\\<\\\\<\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"insert mode\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"indent the current line\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Ctrl-T\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"insert mode\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"unindent the current line\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Ctrl-D\")))), mdx(\"p\", null, \"For all commands, pressing \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \".\"), \" repeats the operation.\"), mdx(\"p\", null, \"For example, typing \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"5>>..\"), \" shifts five lines to the right, and then repeats\\nthe operation twice so that the five lines are shifted three times.\"), mdx(\"p\", null, \"Insert current file name:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \":r! echo %\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Insert characters at specific lines head\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \":80,90s/^/#/\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Switch windows\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"gt            go to next tab\\ngT            go to previous tab\\n{i}gt         go to tab in position i\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Fold code block under spf-13 Vim\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"za\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"vimdiff file1 file2\\n\")), mdx(\"p\", null, \"Or After vimed file1:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \":vert diffsplit file2\\n\")), mdx(\"h1\", {\n    \"id\": \"matlab\"\n  }, \"Matlab\"), mdx(\"p\", null, \"Comment multi-lines in Matlab: Ctrl+R, Ctrl+T\"), mdx(\"p\", null, \"Launch Matlab:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"cd /usr/local/bin/\\nsudo ln -s /usr/local/MATLAB/R2012a/bin/matlab Matlab\\ngedit ~/.bashrc\\nalias matlab=\\\"/usr/local/MATLAB/R2012a/bin/matlab\\\"\\n\")), mdx(\"p\", null, \"Start MATLAB Without Desktop:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"matlab -nojvm -nodisplay -nosplash\\n\")), mdx(\"p\", null, \"Matlab + nohup:\"), mdx(\"p\", null, \"runGenerareSSProposals.sh:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"#!/bin/sh\\ncd /path/to/detection-proposals\\nmatlab -nojvm -nodisplay -nosplash -r \\\"startup; callRunCOCO; exit\\\"\\n\")), mdx(\"p\", null, \"runNohup.sh:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"time=`date +%Y%m%d_%H%M%S`\\ncd /path/to/detection-proposals\\nnohup ./runGenerareSSProposals.sh > runGenerareSSProposals_${time}.log 2>&1 &\\necho $! > save_runGenerareSSProposals_val_pid.txt\\n\")), mdx(\"h1\", {\n    \"id\": \"hadoop\"\n  }, \"Hadoop\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Delete a directory from Hadoop cluster\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"hadoop fs -rm -r -f /user/the/path/to/your/dir\\n\")), mdx(\"h1\", {\n    \"id\": \"others\"\n  }, \"Others\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Hotkeys to speed up Linux CLI navigation:\")), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"hotkey\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Ctrl + a\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"go to the start of the command line\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Ctrl + e\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"go to the end of the command line\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Ctrl + k\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"delete from cursor to the end of the command line\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Ctrl + u\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"delete from cursor to the start of the command line\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Ctrl + w\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"delete from cursor to start of word (i.e. delete backwards one word)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Ctrl + y\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"paste word or text that was cut using one of the deletion shortcuts (such as the one above) after the cursor\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Ctrl + xx\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"move between start of command line and current cursor position (and back again)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Alt + b\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"move backward one word (or go to start of word the cursor is currently on)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Alt + f\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"move forward one word (or go to end of word the cursor is currently on)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Alt + d\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"delete to end of word starting at cursor (whole word if cursor is at the beginning of word)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Alt + c\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"capitalize to end of word starting at cursor (whole word if cursor is at the beginning of word)\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Alt + u\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"make uppercase from cursor to end of word\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Alt + l\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"make lowercase from cursor to end of word\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Alt + t\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"swap current word with previous\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Ctrl + f\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"move forward one character\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Ctrl + b\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"move backward one character\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Ctrl + d\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"delete character under the cursor\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Ctrl + h\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"delete character before the cursor\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Ctrl + t\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"swap character under cursor with the previous one\")))), mdx(\"p\", null, \"Launch terminal in Ubuntu: Ctrl+Alt+T\"), mdx(\"p\", null, \"Create symbol link:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"ln -s EXISTING_FILE SYMLINK_FILE\\nln -s /path/to/file /path/to/symlink\\n\")), mdx(\"p\", null, \"Open image:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"eog /path/to/image/im.jpg\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"display /path/to/image/im.jpg\\n\")), mdx(\"p\", null, \"Convert text files with DOS or MAC line breaks to Unix line breaks:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"sudo dos2unix /path/to/file\\n\")), mdx(\"p\", null, \"or:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"sed -i 's/\\\\r//' /path/to/file\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"sudo sed -i -e 's/\\\\r$//' /path/to/file\\n\")), mdx(\"p\", null, \"Create new file list:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"sed 's?^?'`pwd`'/detection_images/?; s?$?.jpg?' trainval.txt > voc.2007trainval.list\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Merge two files consistently line by line\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"paste -d \\\" \\\" file1.txt file2.txt\\n\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://stackoverflow.com/questions/16394176/how-to-merge-two-files-consistently-line-by-line\"\n  }, \"http://stackoverflow.com/questions/16394176/how-to-merge-two-files-consistently-line-by-line\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"shuffle file lines\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"shuf file.list > file_shuffled.list\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Combine multiple files into one file\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"cat file1 file2 file3 .... >> merged_file\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Show all hidden characters\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"cat -A filename\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Get recursive full-path listing\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"find /path/to/folder\\n\")), mdx(\"p\", null, \"want files only (omit directories, devices, etc):\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"find /path/to/folder -type f\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Remove specific file types\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"rm `find -type f /path/to/dir/ | grep \\\"filetype\\\"`\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"rm `find -type f /path/to/dir/ | grep -E \\\"filetype1 | filetype2\\\"`\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Zip multiple files/folers to one named zip file\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"zip -r target.zip file1 file2 folder1 folder2\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Remove Windows format line breaks\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"sed -i 's/^M$//g'\\n\")), mdx(\"p\", null, \"Note:\"), mdx(\"p\", null, \"^M = Ctrl+v,Ctrl+m\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Replace tab characters with spaces\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"sed -i 's/^I//g'\\n\")), mdx(\"p\", null, \"Note:\"), mdx(\"p\", null, \"^I = Ctrl+v,Ctrl+I\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Remove duplicate text lines\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"sort {file-name} | uniq -u\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Remove duplicate text lines and only keep one line\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"perl -lne '$seen{$_}++ and next or print;' data.txt > output.txt\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Exit a shell if some commands do not execute correctly\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"./do_something.sh || exit 1\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Split string on Shell\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"str=\\\"/aaaa/bbbbb/cccc\\\"\\necho $str | tr \\\"/\\\" \\\"\\\\n\\\"\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"---\nlayout: post\ncategory: linux_study\ntitle: Useful Linux Commands\ndate: 2015-07-25\n---\n\n# Pack/Unpack/Compress/Uncompress\n\n|file type    |  Pack/Compress                      | Unpack/Uncompress           |\n|:-----------:|:-----------------------------------:|:---------------------------:|\n|.tar         |  tar cvf FileName.tar DirName       |  tar xvf FileName.tar       |\n|.gz          |  gzip FileName                      |  gunzip FileName.gz         |\n|.gz          |  gzip FileName                      |  gzip -d FileName.gz        |\n|.tar.gz, .tgz|  tar -zcvf FileName.tar.gz DirName  |  tar zxvf FileName.tar.gz   |\n|.bz2         |  bzip2 -z FileName                  |  bzip2 -d FileName.bz2      |\n|.bz2         |                                     |  bunzip2 FileName.bz2       |\n|.tar.bz2     |  tar jcvf FileName.tar.bz2 DirName  |  tar jxvf FileName.tar.bz2  |\n|.bz          |                                     |  bzip2 -d FileName.bz       |\n|.bz          |                                     |  bunzip2 FileName.bz        |\n|.tar.bz      |                                     |  tar jxvf FileName.tar.bz   |\n|.Z           |  compress FileName                  |  uncompress FileName.Z      |\n|.tar.Z       |  tar Zcvf FileName.tar.Z DirName    |  tar Zxvf FileName.tar.Z    |\n|.zip         |  zip FileName.zip DirName           |  unzip FileName.zip         |\n|.zip         |  zip -r target.zip dir1 dir2 dir3   |  unzip FileName.zip -d targetFolder |\n|.rar         |  rar a FileName.rar DirName         |  rar x FileName.rar         |\n|.lha         |  lha -a FileName.lha FileName       |  lha -e FileName.lha        |\n|.rpm         |                                     |  rpm2cpio FileName.rpm \\| cpio -div |\n|.deb         |                                     |  ar x example.deb           |\n|.deb         |                                     |  ar p FileName.deb data.tar.gz \\| tar zx |\n|.deb         |                                     |  dpkg -x somepackage.deb ~/temp/ |\n|.xz          |                                     |  xz -d myfiles.tar.xz       |\n|.xz          |                                     |  tar -xf myfiles.tar        |\n|.xz          |                                     |  tar -Jxf myfiles.tar.xz    |\n|.7z          |  7za a myfiles.7z myfiles/          |  7za x myfiles.7z           |\n\nFor compress/uncompress those files:\n\n.tar .tgz .tar.gz .tar.Z .tar.bz .tar.bz2 .zip .cpio .rpm .deb .slp .arj .rar .ace .lha .lzh .lzx .lzs .arc .sda .sfx .lnx .zoo .cab .kar .cpt .pit .sit .sea\n\n```\ncompress:   sEx a FileName.* FileName\nuncompress: sEx x FileName.*\n```\n\n**unzip a tar gz archive to a specific destination**\n\n```\ncd /root/Desktop/folder\ntar xf /root/Documents/file.tar.gz\n```\n\nor:\n\n```\ntar xf file.tar.gz -C /root/Desktop/folder\n```\n\n## Wiew a detailed table of contents for an archive\n\n|file type    |  view contents cmd                  |\n|:-----------:|:-----------------------------------:|\n|.tar.gz      |  tar -tvf my-data.tar.gz            |\n\n# Print info\n\n| task                                              | command                 |\n| :-----------------------------                    | :---------------------: |\n| Print system info                                 | cat /proc/version       |\n| Print kernel version                              | uname -a                |\n| Print distribution information                    | lsb_release -a          |\n| Print software info                               | whereis SOFEWARE        |\n|                                                   | which SOFEWARE          |\n|                                                   | locate SOFEWARE         |\n| Print CPU info                                    | cat /proc/cpuinfo       |\n|                                                   | dmesg \\| grep -i xeon   |\n| Print memory info                                 | cat /proc/meminfo       |\n|                                                   | free -m                 |\n| Print pid info                                    | ps aux \\| grep 'target_pid' |\n| Print graphics card version                       | nvcc --version          |\n| Print graphics card GPU info                      | lspci  \\| grep -i vga   |\n| Print graphics card GPU running info              | nvidia-smi              |\n| Print graphics card GPU info dynamically          | watch -n0.1 nvidia-smi  |\n| Print disk free space                             | df -h                   |\n|                                                   | df -hl                  |\n| Print current folder size                         | du -sh DIRNAME          |\n| Print target folder volume                        | du -sh                  |\n| Print target folder volume (in MB)                | du -sm                  |\n| Prints one entry per line of output (bare format) | ls -1a                  |\n\nCuDNN Version Check:\n\n```\ncat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2\n```\n\nPrint lines 20 to 40:\n\n```\nsed -n '20,40p' file_name\n```\n\nor:\n\n```\nsed -n '20,40p;41q' file_name\n```\n\nor:\n\n```\nawk 'FNR>=20 && FNR<=40' file_name\n```\n\nTo print range with other specific line (5 - 8 & 10):\n\n```\n$ sed -n -e 5,8p -e 10p file\nLine 5\nLine 6\nLine 7\nLine 8\nLine 10\n```\n\n# Download\n\nDownload file:\n\n```\nwget \"http://domain.com/directory/4?action=AttachFile&do=view&target=file.tgz\"\n```\n\nDownload file to specific directory:\n\n```\nwget -O /home/omio/Desktop/ \"http://thecanadiantestbox.x10.mx/CC.zip\"\n```\n\nDownload all files from a folder on a website or FTP:\n\n```\nwget -r --no-parent --reject \"index.html*\" http://vision.cs.utexas.edu/voc/\n```\n\n# Transfer Files\n\nRemote transfer files, remote -> local:\n\n```\nscp account@111.111.111.111:/path/to/remote/file /path/to/local/\n```\n\nRemote transfer files, local -> remote:\n\n```\nscp /path/to/local/file account@111.111.111.111:/path/to/remote/\n```\n\nPrint directory structure:\n\n```\nls -l -R\n```\n\nPrint folder in current directory:\n\n```\nls -lF |grep /\n```\n\n```\nls -l |grep '^d'\n```\n\n\nPrint history command:\n\n```\nhistory\n```\n\n```\nhistory | less\n```\n\n# Rename\n\nPerl-based rename commands (-n: test commands; -v: print renamed files):\n\n```\nrename -n 's/\\.htm$/\\.html/' \\*.htm\n```\n\n```\nrename -v 's/\\.htm$/\\.html/' \\*.htm\n```\n\n**1. Replace first letter of all files' name with 'q':**\n\n```\nfor i in `ls`; do mv -f $i `echo $i | sed 's/^./q/'`; done\n```\n\n**same with a bash script:**\n\n```\nfor file in `ls`\ndo\n  newfile =`echo $i | sed 's/^./q/'`\n　mv $file $newfile\ndone\n```\n\n**2. Replace first 5 letters with 'abcde'**\n\n```\nfor i in `ls`; do mv -f $i `echo $i | sed 's/^...../abcde/'`;\n```\n\n**3. Replace last 5 letters with 'abcde'**\n\n```\nfor i in `ls`; do mv -f $i `echo $i | sed 's/.....$/abcde/'`;\n```\n\n**4. Add 'abcde' to the front**\n\n```\nfor i in `ls`; do mv -f $i `echo \"abcde\"$i`; done\n```\n\n**5. Convert all lower case to upper case**\n\n```\nfor i in `ls`; do mv -f $i `echo $i | tr a-z A-Z`; done\n```\n\n# Count\n\nCount lines in a document\n\n```\nwc -l /dir/file.txt\n```\n\n```\ncat /dir/file.txt | wc -l\n```\n\nFilter and count only lines with pattern, or with -v to invert match\n\n```\ngrep -w \"pattern\" -c file\n```\n\n```\ngrep -w \"pattern\" -c -v file\n```\n\nCount files in the current directory:\n\n```\nls -l | grep “^-” | wc -l\n```\n\nexample: counting all js files in directory \"/home/account/\" (recursively):\n\n```\nls -lR /home/account | grep js | wc -l\n```\n\n```\nls -l \"/home/account\" | grep \"js\" | wc -l\n```\n\nCount files in the current directory, recursively:\n\n```\nls -lR | grep “^-” | wc -l\n```\n\nCount folders in the current directory, recursively:\n\n```\nls -lR | grep “^d” | wc -l\n```\n\nCount words in a file:\n\n```\ngrep -o objStr  filename|wc -l\ngrep -o ‘objStr1\\|objStr2'  filename|wc -l\n```\n\nCount words in a file under Vim:\n\n```\n:%s/objStr//gn\n```\n\n# Search\n\n**Search for a file by its file name**\n\nThe command below will search for the query in the current directory and any subdirectories.\nUsing -iname instead of -name ignores the case of your query. The -name command is case-sensitive.\n\n```\nfind -iname \"filename\"\n```\n\n**Finding all files containing a text string**\n\n```\ngrep -rnw '/path/to/somewhere/' -e \"pattern\"\n\ngrep --include=\\*.{c,h} -rnw '/path/to/somewhere/' -e \"pattern\"\n\ngrep --exclude=*.o -rnw '/path/to/somewhere/' -e \"pattern\"\n\ngrep --exclude-dir={dir1,dir2,*.dst} -rnw '/path/to/somewhere/' -e \"pattern\"\n```\n\n1. -r or -R is recursive,\n2. -n is line number, and\n3. -w stands match the whole word.\n4. -l (lower-case L) can be added to just give the file name of matching files.\n5. Along with these, --exclude or --include parameter could be used for efficient searching.\n\n**Finding all files containing a text string on Linux**\n\n- stackoverflow: [http://stackoverflow.com/questions/16956810/finding-all-files-containing-a-text-string-on-linux](http://stackoverflow.com/questions/16956810/finding-all-files-containing-a-text-string-on-linux)\n\nCount occurrences of a char(e.g, 'aaa') in plain text file\n\n```\nfgrep -o 'aaa' <file> | wc -l\n```\n\n**references**\n\n**How to Find a File in Linux**\n\n[http://www.wikihow.com/Find-a-File-in-Linux](http://www.wikihow.com/Find-a-File-in-Linux)\n\n**How to find files in Linux using 'find'**\n\n[http://www.codecoffee.com/tipsforlinux/articles/21.html](http://www.codecoffee.com/tipsforlinux/articles/21.html)\n\n**35 Practical Examples of Linux Find Command**\n\n[http://www.tecmint.com/35-practical-examples-of-linux-find-command/](http://www.tecmint.com/35-practical-examples-of-linux-find-command/)\n\n**How to use grep to search for strings in files on the shell**\n\n[https://www.howtoforge.com/tutorial/linux-grep-command/](https://www.howtoforge.com/tutorial/linux-grep-command/)\n\n**Find All Files of a Particular Size**\n\n```\nfind /home/ -type f -size +512k -exec ls -lh {} \\;\n```\n\nAs units you can use:\n```\n    b – for 512-byte blocks (this is the default if no suffix is used)\n    c – for bytes\n    w – for two-byte words\n    k – for Kilobytes (units of 1024 bytes)\n    M – for Megabytes (units of 1048576 bytes)\n    G – for Gigabytes (units of 1073741824 bytes)\n```\n\nref: [http://www.ducea.com/2008/02/12/linux-tips-find-all-files-of-a-particular-size/](http://www.ducea.com/2008/02/12/linux-tips-find-all-files-of-a-particular-size/)\n\n# GDB\n\n**GDB reference card**\n\n[https://web.stanford.edu/class/cs107/gdb_refcard.pdf](https://web.stanford.edu/class/cs107/gdb_refcard.pdf)\n\n**GDB Tutorial: A Walkthrough with Examples**\n\n- slides: [https://www.cs.umd.edu/~srhuang/teaching/cmsc212/gdb-tutorial-handout.pdf](https://www.cs.umd.edu/~srhuang/teaching/cmsc212/gdb-tutorial-handout.pdf)\n\n**GNU GDB Debugger Command Cheat Sheet**\n\n[http://www.yolinux.com/TUTORIALS/GDB-Commands.html](http://www.yolinux.com/TUTORIALS/GDB-Commands.html)\n\n**Cheat Sheet**:\n\n| shortcut   | command       | explanation      |\n|:----------:|:-------------:|:----------------:|\n| q          | quit          |                  |\n| h          | help          |                  |\n| h command  | help command  | print command meaning|\n| b          | break         | example: b 5     |\n| disable codenum|           |                  |\n| enable codenum |           ||\n| condition codenum xxx|     | set break condition|\n| c          | continue      |                  |\n| n          | next          |                  |\n| s          | step          |                  |\n| w          |               | print code in current execution point|\n| j codenum  |               | jump to line j   |\n| l          |               | list nearby code |\n| p          |               | print var value  |\n| a          |               | print current func/var value|\n| Enter      |               | repeat last command|\n\n```\ngdb --arg python demo.py 2>&1 | tee demo.log\n```\n\n# pdb\n\n```\nimport pdb\npdb.set_trace()\n```\n\n**exit pdb and allow program to continue**\n\n1. To remove the breakpoint (if inserted it manually):\n\n    ```\n    (Pdb) break\n    Num Type         Disp Enb   Where\n    1   breakpoint   keep yes   at /path/to/test.py:5\n    (Pdb) clear 1\n    Deleted breakpoint 1\n    (Pdb) continue\n    ```\n\n2. if you're using pdb.set_trace(), you can try this (although if you're using pdb in more fancy ways, this may break things...)\n\n    ```\n    (Pdb) pdb.set_trace = lambda: None  # This replaces the set_trace() function!\n    (Pdb) continue\n    # No more breaks!\n    ```\n\n- ref: [http://stackoverflow.com/questions/17820618/how-to-exit-pdb-and-allow-program-to-continue](http://stackoverflow.com/questions/17820618/how-to-exit-pdb-and-allow-program-to-continue)\n\n# Ctags\n\n| command         | explanation                                       |\n|:---------------:|:-------------------------------------------------:|\n| ctags –R *      | Generate tags files in source code root directory |\n| vim -t func/var | find func/var definition                          |\n| :ts             | give a list if func/var has multiple definitions  |\n| Ctrl+]          | jump to definition                                |\n| Ctrl+T          | jump back                                         |\n\n# screen\n\n| task                        | command                       |\n|:---------------------------:|:-----------------------------:|\n| Run program in screen mode  | screen python demo.py --gpu 1 |\n| Detach screen               | Ctrl + a, c                   |\n| Detach screen               | Ctrl + a, d                   |\n| Re-connect screen           | screen -r pid                 |\n| Display all screens         | screen -ls                    |\n| Delete screen               | kill pid                      |\n| Naming a screen             | screen -S sessionName         |\n\n# nohup\n\n```\nnohup command-with-options &\n```\n\n```\nnohup xxx.sh 1 > log.txt 2>&1 &\n```\n\n**nohup - get the process ID to kill a nohup process**\n\n```\nps -ef | grep \"command name\"\n```\n\nor:\n\n```\nnohup command-with-options & \necho $! > save_pid.txt\nkill -9 `cat save_pid.txt`\n```\n\n# cscope\n\n| task                              | command                         |\n|:---------------------------------:|:-------------------------------:|\n| Generate Cscope database          | find . -name \"*.c\" -o -name \"*.cc\" -o -name \"*.cpp\" -o -name \"*.cu\" -o -name \"*.h\" -o -name \"*.hpp\" -o -name \"*.py\" -o -name \"*.proto\" > cscope.files |\n| Build a Cscope reference database | cscope -q -R -b -i cscope.files |\n| Start the Cscope browser          | cscope -d                       |\n| Exit a Cscope browser             | Ctrl + d                        |\n\n**Cheat Sheet**\n\n```\n-b  Build the cross-reference only.\n-C  Ignore letter case when searching.\n-c  Use only ASCII characters in the cross-ref file (don’t compress).\n-d  Do not update the cross-reference.\n-e  Suppress the -e command prompt between files.\n-F  symfile Read symbol reference lines from symfile.\n-f  reffile Use reffile as cross-ref file name instead of cscope.out.\n-h  This help screen.\n-I  incdir Look in incdir for any #include files.\n-i  namefile Browse through files listed in namefile, instead of cscope.files\n-k  Kernel Mode – don’t use /usr/include for #include files.\n-L  Do a single search with line-oriented output.\n-l  Line-oriented interface.\n-num  pattern Go to input field num (counting from 0) and find pattern.\n-P  path Prepend path to relative file names in pre-built cross-ref file.\n-p  n Display the last n file path components.\n-q  Build an inverted index for quick symbol searching.\n-R  Recurse directories for files.\n-s  dir Look in dir for additional source files.\n-T  Use only the first eight characters to match against C symbols.\n-U  Check file time stamps.\n-u  Unconditionally build the cross-reference file.\n-v  Be more verbose in line mode.\n-V  Print the version number.\n```\n\n# Vim\n\n**Shifting blocks visually**\n\n[http://vim.wikia.com/wiki/Shifting_blocks_visually](http://vim.wikia.com/wiki/Shifting_blocks_visually)\n\n| mode        | task                      | command   |\n|:-----------:|:-------------------------:|:---------:|\n| normal mode | indent the current line   | type \\>\\> |\n| normal mode | unindent the current line | type \\<\\< |\n| insert mode | indent the current line   | Ctrl-T    |\n| insert mode | unindent the current line | Ctrl-D    |\n\nFor all commands, pressing **.** repeats the operation.\n\nFor example, typing **5>>..** shifts five lines to the right, and then repeats\nthe operation twice so that the five lines are shifted three times.\n\nInsert current file name:\n\n```\n:r! echo %\n```\n\n**Insert characters at specific lines head**\n\n```\n:80,90s/^/#/\n```\n\n**Switch windows**\n\n```\ngt            go to next tab\ngT            go to previous tab\n{i}gt         go to tab in position i\n```\n\n**Fold code block under spf-13 Vim**\n\n```\nza\n```\n\n```\nvimdiff file1 file2\n```\n\nOr After vimed file1:\n\n```\n:vert diffsplit file2\n```\n\n# Matlab\n\nComment multi-lines in Matlab: Ctrl+R, Ctrl+T\n\nLaunch Matlab:\n\n```\ncd /usr/local/bin/\nsudo ln -s /usr/local/MATLAB/R2012a/bin/matlab Matlab\ngedit ~/.bashrc\nalias matlab=\"/usr/local/MATLAB/R2012a/bin/matlab\"\n```\n\nStart MATLAB Without Desktop:\n\n```\nmatlab -nojvm -nodisplay -nosplash\n```\n\nMatlab + nohup:\n\nrunGenerareSSProposals.sh:\n\n```\n#!/bin/sh\ncd /path/to/detection-proposals\nmatlab -nojvm -nodisplay -nosplash -r \"startup; callRunCOCO; exit\"\n```\n\nrunNohup.sh:\n\n```\ntime=`date +%Y%m%d_%H%M%S`\ncd /path/to/detection-proposals\nnohup ./runGenerareSSProposals.sh > runGenerareSSProposals_${time}.log 2>&1 &\necho $! > save_runGenerareSSProposals_val_pid.txt\n```\n\n# Hadoop\n\n**Delete a directory from Hadoop cluster**\n\n```\nhadoop fs -rm -r -f /user/the/path/to/your/dir\n```\n\n# Others\n\n**Hotkeys to speed up Linux CLI navigation:**\n\n| hotkey    |                                                                                                              |\n| :------:  | :----------------------------------------------------------------------------------------------------------: |\n| Ctrl + a  | go to the start of the command line                                                                          |\n| Ctrl + e  | go to the end of the command line                                                                            |\n| Ctrl + k  | delete from cursor to the end of the command line                                                            |\n| Ctrl + u  | delete from cursor to the start of the command line                                                          |\n| Ctrl + w  | delete from cursor to start of word (i.e. delete backwards one word)                                         |\n| Ctrl + y  | paste word or text that was cut using one of the deletion shortcuts (such as the one above) after the cursor |\n| Ctrl + xx | move between start of command line and current cursor position (and back again)                              |\n| Alt + b   | move backward one word (or go to start of word the cursor is currently on)                                   |\n| Alt + f   | move forward one word (or go to end of word the cursor is currently on)                                      |\n| Alt + d   | delete to end of word starting at cursor (whole word if cursor is at the beginning of word)                  |\n| Alt + c   | capitalize to end of word starting at cursor (whole word if cursor is at the beginning of word)              |\n| Alt + u   | make uppercase from cursor to end of word                                                                    |\n| Alt + l   | make lowercase from cursor to end of word                                                                    |\n| Alt + t   | swap current word with previous                                                                              |\n| Ctrl + f  | move forward one character                                                                                   |\n| Ctrl + b  | move backward one character                                                                                  |\n| Ctrl + d  | delete character under the cursor                                                                            |\n| Ctrl + h  | delete character before the cursor                                                                           |\n| Ctrl + t  | swap character under cursor with the previous one                                                            |\n\nLaunch terminal in Ubuntu: Ctrl+Alt+T\n\nCreate symbol link:\n\n```\nln -s EXISTING_FILE SYMLINK_FILE\nln -s /path/to/file /path/to/symlink\n```\n\nOpen image:\n\n```\neog /path/to/image/im.jpg\n```\n\n```\ndisplay /path/to/image/im.jpg\n```\n\nConvert text files with DOS or MAC line breaks to Unix line breaks:\n\n```\nsudo dos2unix /path/to/file\n```\n\nor:\n\n```\nsed -i 's/\\r//' /path/to/file\n```\n\n```\nsudo sed -i -e 's/\\r$//' /path/to/file\n```\n\nCreate new file list:\n\n```\nsed 's?^?'`pwd`'/detection_images/?; s?$?.jpg?' trainval.txt > voc.2007trainval.list\n```\n\n**Merge two files consistently line by line**\n\n```\npaste -d \" \" file1.txt file2.txt\n```\n\n[http://stackoverflow.com/questions/16394176/how-to-merge-two-files-consistently-line-by-line](http://stackoverflow.com/questions/16394176/how-to-merge-two-files-consistently-line-by-line)\n\n**shuffle file lines**\n\n```\nshuf file.list > file_shuffled.list\n```\n\n**Combine multiple files into one file**\n\n```\ncat file1 file2 file3 .... >> merged_file\n```\n\n**Show all hidden characters**:\n\n```\ncat -A filename\n```\n\n**Get recursive full-path listing**\n\n```\nfind /path/to/folder\n```\n\nwant files only (omit directories, devices, etc):\n\n```\nfind /path/to/folder -type f\n```\n\n**Remove specific file types**\n\n```\nrm `find -type f /path/to/dir/ | grep \"filetype\"`\n```\n\n```\nrm `find -type f /path/to/dir/ | grep -E \"filetype1 | filetype2\"`\n```\n\n**Zip multiple files/folers to one named zip file**\n\n```\nzip -r target.zip file1 file2 folder1 folder2\n```\n\n**Remove Windows format line breaks**\n\n```\nsed -i 's/^M$//g'\n```\n\nNote:\n\n^M = Ctrl+v,Ctrl+m\n\n**Replace tab characters with spaces**\n\n```\nsed -i 's/^I//g'\n```\n\nNote:\n\n^I = Ctrl+v,Ctrl+I\n\n**Remove duplicate text lines**\n\n```\nsort {file-name} | uniq -u\n```\n\n**Remove duplicate text lines and only keep one line**\n```\nperl -lne '$seen{$_}++ and next or print;' data.txt > output.txt\n```\n\n**Exit a shell if some commands do not execute correctly**\n\n```\n./do_something.sh || exit 1\n```\n\n**Split string on Shell**\n\n```\nstr=\"/aaaa/bbbbb/cccc\"\necho $str | tr \"/\" \"\\n\"\n```\n","excerpt":"Pack/Unpack/Compress/Uncompress file type Pack/Compress Unpack/Uncompress .tar tar cvf FileName.tar DirName tar xvf FileName.tar .gz gzip F…","outboundReferences":[],"inboundReferences":[]},"tagsOutbound":{"nodes":[]}},"pageContext":{"tags":[],"slug":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/working_on_linux/2015-07-25-useful-linux-commands/","sidebarItems":[{"title":"Categories","items":[{"title":"Commercial","url":"","items":[{"title":"Commercial Structure","url":"/Commercial/Commercial Structure/","items":[]},{"title":"Community of Practice","url":"/Commercial/Community of Practice/","items":[]},{"title":"Domains","url":"/Commercial/Domains/","items":[]},{"title":"Webizen Alliance","url":"/Commercial/Webizen Alliance/","items":[]}]},{"title":"Core Services","url":"","items":[{"title":"Decentralised Ontologies","url":"/Core Services/Decentralised Ontologies/","items":[]},{"title":"Permissive Commons","url":"/Core Services/Permissive Commons/","items":[]},{"title":"Safety Protocols","url":"","items":[{"title":"Safety Protocols","url":"/Core Services/Safety Protocols/Safety Protocols/","items":[]},{"title":"Social Factors","url":"","items":[{"title":"Best Efforts","url":"/Core Services/Safety Protocols/Social Factors/Best Efforts/","items":[]},{"title":"Ending Digital Slavery","url":"/Core Services/Safety Protocols/Social Factors/Ending Digital Slavery/","items":[]},{"title":"Freedom of Thought","url":"/Core Services/Safety Protocols/Social Factors/Freedom of Thought/","items":[]},{"title":"No Golden Handcuffs","url":"/Core Services/Safety Protocols/Social Factors/No Golden Handcuffs/","items":[]},{"title":"Relationships (Social)","url":"/Core Services/Safety Protocols/Social Factors/Relationships (Social)/","items":[]},{"title":"Social Attack Vectors","url":"/Core Services/Safety Protocols/Social Factors/Social Attack Vectors/","items":[]},{"title":"The Webizen Charter","url":"/Core Services/Safety Protocols/Social Factors/The Webizen Charter/","items":[]}]},{"title":"Values Credentials","url":"/Core Services/Safety Protocols/Values Credentials/","items":[]}]},{"title":"Temporal Semantics","url":"/Core Services/Temporal Semantics/","items":[]},{"title":"Verifiable Claims & Credentials","url":"/Core Services/Verifiable Claims & Credentials/","items":[]},{"title":"Webizen Socio-Economics","url":"","items":[{"title":"Biosphere Ontologies","url":"/Core Services/Webizen Socio-Economics/Biosphere Ontologies/","items":[]},{"title":"Centricity","url":"/Core Services/Webizen Socio-Economics/Centricity/","items":[]},{"title":"Currencies","url":"/Core Services/Webizen Socio-Economics/Currencies/","items":[]},{"title":"SocioSphere Ontologies","url":"/Core Services/Webizen Socio-Economics/SocioSphere Ontologies/","items":[]},{"title":"Sustainable Development Goals (ESG)","url":"/Core Services/Webizen Socio-Economics/Sustainable Development Goals (ESG)/","items":[]}]}]},{"title":"Core Technologies","url":"","items":[{"title":"AUTH","url":"","items":[{"title":"Authentication Fabric","url":"/Core Technologies/AUTH/Authentication Fabric/","items":[]}]},{"title":"Webizen App Spec","url":"","items":[{"title":"SemWebSpecs","url":"","items":[{"title":"Core Ontologies","url":"","items":[{"title":"FOAF","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/Core Ontologies/FOAF/","items":[]},{"title":"General Ontology Information","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/Core Ontologies/General Ontology Information/","items":[]},{"title":"Human Rights Ontologies","url":"","items":[{"title":"UDHR","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/Core Ontologies/Human Rights Ontologies/UDHR/","items":[]}]},{"title":"MD-RDF Ontologies","url":"","items":[{"title":"DataTypesOntology (DTO) Core","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/Core Ontologies/MD-RDF Ontologies/DataTypes Ontology/","items":[]},{"title":"Friend of a Friend (FOAF) Core","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/Core Ontologies/MD-RDF Ontologies/FOAF/","items":[]}]},{"title":"OWL","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/Core Ontologies/OWL/","items":[]},{"title":"RDF Schema 1.1","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/Core Ontologies/RDFS/","items":[]},{"title":"Sitemap","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/Core Ontologies/Sitemap/","items":[]},{"title":"SKOS","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/Core Ontologies/SKOS/","items":[]},{"title":"SOIC","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/Core Ontologies/SOIC/","items":[]}]},{"title":"Semantic Web - An Introduction","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/Semantic Web - An Introduction/","items":[]},{"title":"SemWeb-AUTH","url":"","items":[{"title":"WebID-OIDC","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/SemWeb-AUTH/WebID-OIDC/","items":[]},{"title":"WebID-RSA","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/SemWeb-AUTH/WebID-RSA/","items":[]},{"title":"WebID-TLS","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/SemWeb-AUTH/WebID-TLS/","items":[]}]},{"title":"Sparql","url":"","items":[{"title":"Sparql Family","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/Sparql/Sparql Family/","items":[]}]},{"title":"W3C Specifications","url":"","items":[{"title":"Linked Data Fragments","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/W3C Specifications/Linked Data Fragments/","items":[]},{"title":"Linked Data Notifications","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/W3C Specifications/Linked Data Notifications/","items":[]},{"title":"Linked Data Platform","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/W3C Specifications/Linked Data Platform/","items":[]},{"title":"Linked Media Fragments","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/W3C Specifications/Linked Media Fragments/","items":[]},{"title":"RDF","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/W3C Specifications/RDF/","items":[]},{"title":"Web Access Control (WAC)","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/W3C Specifications/Web Access Control (WAC)/","items":[]},{"title":"Web Of Things","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/W3C Specifications/Web Of Things/","items":[]},{"title":"WebID","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/W3C Specifications/WebID/","items":[]}]}]},{"title":"Webizen App Spec 1.0","url":"/Core Technologies/Webizen App Spec/Webizen App Spec 1.0/","items":[]},{"title":"WebSpec","url":"","items":[{"title":"HTML SPECS","url":"/Core Technologies/Webizen App Spec/WebSpec/HTML SPECS/","items":[]},{"title":"Query Interfaces","url":"","items":[{"title":"GraphQL","url":"/Core Technologies/Webizen App Spec/WebSpec/Query Interfaces/GraphQL/","items":[]}]},{"title":"WebPlatformTools","url":"","items":[{"title":"WebAuthn","url":"/Core Technologies/Webizen App Spec/WebSpec/WebPlatformTools/WebAuthn/","items":[]},{"title":"WebDav","url":"/Core Technologies/Webizen App Spec/WebSpec/WebPlatformTools/WebDav/","items":[]}]}]}]}]},{"title":"Database Requirements","url":"","items":[{"title":"Database Alternatives","url":"","items":[{"title":"Akutan","url":"/Database requirements/Database Alternatives/akutan/","items":[]},{"title":"CayleyGraph","url":"/Database requirements/Database Alternatives/CayleyGraph/","items":[]}]},{"title":"Database Methods","url":"","items":[{"title":"GraphQL","url":"/Database requirements/Database methods/GraphQL/","items":[]},{"title":"Sparql","url":"/Database requirements/Database methods/Sparql/","items":[]}]}]},{"title":"Host Service Requirements","url":"","items":[{"title":"Domain Hosting","url":"/Host Service Requirements/Domain Hosting/","items":[]},{"title":"Email Services","url":"/Host Service Requirements/Email Services/","items":[]},{"title":"LD_PostOffice_SemanticMGR","url":"/Host Service Requirements/LD_PostOffice_SemanticMGR/","items":[]},{"title":"Media Processing","url":"/Host Service Requirements/Media Processing/","items":[{"title":"Ffmpeg","url":"/Host Service Requirements/Media Processing/ffmpeg/","items":[]},{"title":"Opencv","url":"/Host Service Requirements/Media Processing/opencv/","items":[]}]},{"title":"Website Host","url":"/Host Service Requirements/Website Host/","items":[]}]},{"title":"ICT Stack","url":"","items":[{"title":"General References","url":"","items":[{"title":"List of Protocols ISO Model","url":"/ICT Stack/General References/List of Protocols ISO model/","items":[]}]},{"title":"Internet","url":"","items":[{"title":"Internet Stack","url":"/ICT Stack/Internet/Internet Stack/","items":[]}]}]},{"title":"Implementation V1","url":"","items":[{"title":"App-Design-Sdk-V1","url":"","items":[{"title":"Core Apps","url":"","items":[{"title":"Agent Directory","url":"/Implementation V1/App-design-sdk-v1/Core Apps/Agent Directory/","items":[]},{"title":"Credentials & Contracts Manager","url":"/Implementation V1/App-design-sdk-v1/Core Apps/Credentials & Contracts Manager/","items":[]},{"title":"File (Package) Manager","url":"/Implementation V1/App-design-sdk-v1/Core Apps/File (package) Manager/","items":[]},{"title":"Temporal Apps","url":"","items":[{"title":"Calendar","url":"/Implementation V1/App-design-sdk-v1/Core Apps/Temporal Apps/Calendar/","items":[]},{"title":"Timeline Interface","url":"/Implementation V1/App-design-sdk-v1/Core Apps/Temporal Apps/Timeline Interface/","items":[]}]},{"title":"Webizen Apps (V1)","url":"/Implementation V1/App-design-sdk-v1/Core Apps/Webizen Apps (v1)/","items":[]},{"title":"Webizen Manager","url":"/Implementation V1/App-design-sdk-v1/Core Apps/Webizen Manager/","items":[]}]},{"title":"Data Applications","url":"/Implementation V1/App-design-sdk-v1/Data Applications/","items":[]},{"title":"Design Goals","url":"","items":[{"title":"Design Goals Overview","url":"/Implementation V1/App-design-sdk-v1/Design Goals/Design Goals Overview/","items":[]}]}]},{"title":"Edge","url":"","items":[{"title":"Webizen Local App Functionality","url":"/Implementation V1/edge/Webizen Local App Functionality/","items":[]}]},{"title":"GoLang Libraries","url":"/Implementation V1/GoLang Libraries/","items":[]},{"title":"Implementation V1 Summary","url":"/Implementation V1/Implementation V1 Summary/","items":[]},{"title":"Vps","url":"","items":[{"title":"Server Functionality Summary (VPS)","url":"/Implementation V1/vps/Server Functionality Summary (VPS)/","items":[]}]},{"title":"Webizen 1.0","url":"/Implementation V1/Webizen 1.0/","items":[]},{"title":"Webizen-Connect","url":"","items":[{"title":"Social Media APIs","url":"/Implementation V1/Webizen-Connect/Social Media APIs/","items":[]},{"title":"Webizen-Connect (Summary)","url":"/Implementation V1/Webizen-Connect/Webizen-Connect (summary)/","items":[]}]}]},{"title":"Non-HTTP(s) Protocols","url":"","items":[{"title":"DAT","url":"/Non-HTTP(s) Protocols/DAT/","items":[]},{"title":"GIT","url":"/Non-HTTP(s) Protocols/GIT/","items":[]},{"title":"GUNECO","url":"/Non-HTTP(s) Protocols/GUNECO/","items":[]},{"title":"IPFS","url":"/Non-HTTP(s) Protocols/IPFS/","items":[]},{"title":"Lightning Network","url":"/Non-HTTP(s) Protocols/Lightning Network/","items":[]},{"title":"Non-HTTP(s) Protocols (& DLTs)","url":"/Non-HTTP(s) Protocols/Non-HTTP(s) Protocols (& DLTs)/","items":[]},{"title":"WebRTC","url":"/Non-HTTP(s) Protocols/WebRTC/","items":[]},{"title":"WebSockets","url":"/Non-HTTP(s) Protocols/WebSockets/","items":[]},{"title":"WebTorrent","url":"/Non-HTTP(s) Protocols/WebTorrent/","items":[]}]},{"title":"Old-Work-Archives","url":"","items":[{"title":"2018-Webizen-Net-Au","url":"","items":[{"title":"_Link_library_links","url":"","items":[{"title":"Link Library","url":"/old-work-archives/2018-webizen-net-au/_link_library_links/2018-09-23-wp-linked-data/","items":[]}]},{"title":"_Posts","url":"","items":[{"title":"About W3C","url":"/old-work-archives/2018-webizen-net-au/_posts/2018-09-27-about-w3c/","items":[]},{"title":"Advanced Functions &#8211; Facebook Pages","url":"/old-work-archives/2018-webizen-net-au/_posts/2012-12-16-advanced-functions-facebook-pages/","items":[]},{"title":"Advanced Search &#038; Discovery Tips","url":"/old-work-archives/2018-webizen-net-au/_posts/2017-07-21-advanced-search-discovery-tips/","items":[]},{"title":"An introduction to Virtual Machines.","url":"/old-work-archives/2018-webizen-net-au/_posts/2017-07-23-an-introduction-to-virtual-machines/","items":[]},{"title":"Basic Media Analysis &#8211; Part 1 (Audio)","url":"/old-work-archives/2018-webizen-net-au/_posts/2017-12-30-media-analysis-part-1-audio/","items":[]},{"title":"Basic Media Analysis &#8211; Part 2 (visual)","url":"/old-work-archives/2018-webizen-net-au/_posts/2017-12-31-media-analysis-part-2-visual/","items":[]},{"title":"Basic Media Analysis &#8211; Part 3 (Text &#038; Metadata)","url":"/old-work-archives/2018-webizen-net-au/_posts/2018-01-01-basic-media-analysis-part-3-text-metadata/","items":[]},{"title":"Building an Economy based upon Knowledge Equity.","url":"/old-work-archives/2018-webizen-net-au/_posts/2018-09-25-building-an-economy-based-upon-knowledge-equity/","items":[]},{"title":"Choice of Law","url":"/old-work-archives/2018-webizen-net-au/_posts/2017-12-26-choice-of-law/","items":[]},{"title":"Contemplation of the ITU Dubai Meeting and the Future of the Internet","url":"/old-work-archives/2018-webizen-net-au/_posts/2012-12-19-contemplation-of-the-itu-dubai-meeting-and-the-future-of-the-internet/","items":[]},{"title":"Creating a Presence &#8211; Online","url":"/old-work-archives/2018-webizen-net-au/_posts/2012-11-28-creating-a-presence-online/","items":[]},{"title":"Credentials and Payments by Manu Sporny","url":"/old-work-archives/2018-webizen-net-au/_posts/2018-09-23-credentials-and-payments-by-manu-sporny/","items":[]},{"title":"Data Recovery &#038; Collection: Mobile Devices","url":"/old-work-archives/2018-webizen-net-au/_posts/2017-12-28-mobile-devices-data-recovery-collection/","items":[]},{"title":"Data Recovery: Laptop &#038; Computers","url":"/old-work-archives/2018-webizen-net-au/_posts/2017-12-28-data-recovery-laptop-computers/","items":[]},{"title":"Decentralized Web Conference 2016","url":"/old-work-archives/2018-webizen-net-au/_posts/2016-06-09-decentralized-web-2016/","items":[]},{"title":"Decentralized Web Summit 2018","url":"/old-work-archives/2018-webizen-net-au/_posts/2018-09-23-decentralized-web-summit-2018/","items":[]},{"title":"Does Anonymity exist?","url":"/old-work-archives/2018-webizen-net-au/_posts/2017-07-23-does-anonymity-exist/","items":[]},{"title":"Downloading My Data from Social Networks","url":"/old-work-archives/2018-webizen-net-au/_posts/2017-07-21-downloading-my-data-from-social-networks/","items":[]},{"title":"Events","url":"/old-work-archives/2018-webizen-net-au/_posts/2012-11-28-events/","items":[]},{"title":"Facebook Pages","url":"/old-work-archives/2018-webizen-net-au/_posts/2012-12-16-facebook-pages/","items":[]},{"title":"Google Tracking Data (geolocation)","url":"/old-work-archives/2018-webizen-net-au/_posts/2017-07-21-google-tracking/","items":[]},{"title":"Human Consciousness","url":"/old-work-archives/2018-webizen-net-au/_posts/2018-09-23-human-consciousness/","items":[]},{"title":"Image Recgonition Video Playlist","url":"/old-work-archives/2018-webizen-net-au/_posts/2018-09-23-image-recgonition-video-playlist/","items":[]},{"title":"Inferencing (introduction)","url":"/old-work-archives/2018-webizen-net-au/_posts/2018-09-21-inferencing-introduction/","items":[]},{"title":"Introduction to AI","url":"/old-work-archives/2018-webizen-net-au/_posts/2018-09-23-introduction-to-ai/","items":[]},{"title":"Introduction to Linked Data","url":"/old-work-archives/2018-webizen-net-au/_posts/2017-07-21-introduction-to-linked-data/","items":[]},{"title":"Introduction to Maltego","url":"/old-work-archives/2018-webizen-net-au/_posts/2017-07-23-introduction-to-maltego/","items":[]},{"title":"Introduction to Ontologies","url":"/old-work-archives/2018-webizen-net-au/_posts/2018-09-21-ontologies-intro/","items":[]},{"title":"Introduction to Semantic Web","url":"/old-work-archives/2018-webizen-net-au/_posts/2018-09-23-introduction-to-semantic-web/","items":[]},{"title":"Knowledge Capital","url":"/old-work-archives/2018-webizen-net-au/_posts/2012-10-17-knowledge-capital/","items":[]},{"title":"Logo&#8217;s, Style Guides and Artwork","url":"/old-work-archives/2018-webizen-net-au/_posts/2012-11-28-logos-style-guides-and-artwork/","items":[]},{"title":"MindMapping &#8211; Setting-up a business &#8211; Identity","url":"/old-work-archives/2018-webizen-net-au/_posts/2012-11-28-mindmapping-setting-up-a-business-identity/","items":[]},{"title":"Openlink Virtuoso","url":"/old-work-archives/2018-webizen-net-au/_posts/2017-07-21-openlink-virtuoso/","items":[]},{"title":"OpenRefine","url":"/old-work-archives/2018-webizen-net-au/_posts/2017-07-21-74-2/","items":[]},{"title":"Projects, Customers and Invoicing &#8211; Web-Services for Startups","url":"/old-work-archives/2018-webizen-net-au/_posts/2012-11-19-projects-customers-and-invoicing-web-services-for-startups/","items":[]},{"title":"RWW &#038; some Solid history","url":"/old-work-archives/2018-webizen-net-au/_posts/2018-09-21-rww-some-solid-history/","items":[]},{"title":"Semantic Web (An Intro)","url":"/old-work-archives/2018-webizen-net-au/_posts/2018-09-21-semantic-web-an-intro/","items":[]},{"title":"Setting-up Twitter","url":"/old-work-archives/2018-webizen-net-au/_posts/2013-06-07-setting-up-twitter/","items":[]},{"title":"Social Encryption: An Introduction","url":"/old-work-archives/2018-webizen-net-au/_posts/2018-09-25-social-encryption-an-introduction/","items":[]},{"title":"Stock Content","url":"/old-work-archives/2018-webizen-net-au/_posts/2012-11-28-stock-content/","items":[]},{"title":"The WayBack Machine","url":"/old-work-archives/2018-webizen-net-au/_posts/2017-07-27-the-wayback-machine/","items":[]},{"title":"Tim Berners Lee &#8211; Turing Lecture","url":"/old-work-archives/2018-webizen-net-au/_posts/2018-05-29-tim-berners-lee-turing-lecture/","items":[]},{"title":"Tools of Trade","url":"/old-work-archives/2018-webizen-net-au/_posts/2012-11-19-tools-of-trade/","items":[]},{"title":"Trust Factory 2017","url":"/old-work-archives/2018-webizen-net-au/_posts/2018-09-23-trust-factory-2017/","items":[]},{"title":"Verifiable Claims (An Introduction)","url":"/old-work-archives/2018-webizen-net-au/_posts/2018-09-21-vc-intro/","items":[]},{"title":"Web of Things &#8211; an Introduction","url":"/old-work-archives/2018-webizen-net-au/_posts/2018-09-21-web-of-things-an-introduction/","items":[]},{"title":"Web-Persistence","url":"/old-work-archives/2018-webizen-net-au/_posts/2017-07-23-web-persistence/","items":[]},{"title":"Web-Services &#8211; Marketing Tools","url":"/old-work-archives/2018-webizen-net-au/_posts/2012-11-19-web-services-marketing-tools/","items":[]},{"title":"Website Templates","url":"/old-work-archives/2018-webizen-net-au/_posts/2012-11-19-templates/","items":[]},{"title":"What is Linked Data?","url":"/old-work-archives/2018-webizen-net-au/_posts/2018-09-23-what-is-linked-data/","items":[]},{"title":"What is Open Source Intelligence?","url":"/old-work-archives/2018-webizen-net-au/_posts/2017-07-23-what-is-osint/","items":[]},{"title":"WiX","url":"/old-work-archives/2018-webizen-net-au/_posts/2013-01-01-wix/","items":[]}]},{"title":"about","url":"/old-work-archives/2018-webizen-net-au/about/","items":[{"title":"About The Author","url":"/old-work-archives/2018-webizen-net-au/about/about-the-author/","items":[]},{"title":"Applied Theory: Applications for a Human Centric Web","url":"/old-work-archives/2018-webizen-net-au/about/applied-theory-applications-for-a-human-centric-web/","items":[{"title":"Digital Receipts","url":"/old-work-archives/2018-webizen-net-au/about/applied-theory-applications-for-a-human-centric-web/digital-receipts/","items":[]},{"title":"Fake News: Considerations → Principles → The Institution of Socio &#8211; Economic Values","url":"/old-work-archives/2018-webizen-net-au/about/applied-theory-applications-for-a-human-centric-web/fake-news-considerations/","items":[]},{"title":"Healthy Living Economy","url":"/old-work-archives/2018-webizen-net-au/about/applied-theory-applications-for-a-human-centric-web/healthy-living-economy/","items":[]},{"title":"HyperMedia Solutions &#8211; Adapting HbbTV V2","url":"/old-work-archives/2018-webizen-net-au/about/applied-theory-applications-for-a-human-centric-web/hypermedia-solutions-adapting-hbbtv-v2/","items":[{"title":"HYPERMEDIA PACKAGES","url":"/old-work-archives/2018-webizen-net-au/about/applied-theory-applications-for-a-human-centric-web/hypermedia-solutions-adapting-hbbtv-v2/hypermedia-packages/","items":[]},{"title":"USER STORIES: INTERACTIVE VIEWING EXPERIENCE","url":"/old-work-archives/2018-webizen-net-au/about/applied-theory-applications-for-a-human-centric-web/hypermedia-solutions-adapting-hbbtv-v2/user-stories-interactive-viewing-experience/","items":[]}]},{"title":"Measurements App","url":"/old-work-archives/2018-webizen-net-au/about/applied-theory-applications-for-a-human-centric-web/measurements-app/","items":[]},{"title":"Re:Animation","url":"/old-work-archives/2018-webizen-net-au/about/applied-theory-applications-for-a-human-centric-web/reanimation/","items":[]},{"title":"Solutions to FakeNews: Linked-Data, Ontologies and Verifiable Claims","url":"/old-work-archives/2018-webizen-net-au/about/applied-theory-applications-for-a-human-centric-web/ld-solutions-to-fakenews/","items":[]}]},{"title":"Executive Summary","url":"/old-work-archives/2018-webizen-net-au/about/executive-summary/","items":[{"title":"Assisting those who Enforce the Law","url":"/old-work-archives/2018-webizen-net-au/about/executive-summary/assisting-those-who-enforce-the-law/","items":[]},{"title":"Consumer Protections","url":"/old-work-archives/2018-webizen-net-au/about/executive-summary/consumer-protections/","items":[]},{"title":"Knowledge Banking: Legal Structures","url":"/old-work-archives/2018-webizen-net-au/about/executive-summary/knowledge-banking-legal-structures/","items":[]},{"title":"Knowledge Economics &#8211; Services","url":"/old-work-archives/2018-webizen-net-au/about/executive-summary/knowledge-economics-services/","items":[]},{"title":"Preserving The Freedom to Think","url":"/old-work-archives/2018-webizen-net-au/about/executive-summary/preserving-the-freedom-to-think/","items":[]}]},{"title":"History","url":"/old-work-archives/2018-webizen-net-au/about/history/","items":[{"title":"History: Global Governance and ICT.","url":"/old-work-archives/2018-webizen-net-au/about/history/history-global-governance-ict-1/","items":[]}]},{"title":"Knowledge Banking: A Technical Architecture Summary","url":"/old-work-archives/2018-webizen-net-au/about/knowledge-banking-a-technical-architecture-summary/","items":[{"title":"An introduction to Credentials.","url":"/old-work-archives/2018-webizen-net-au/about/knowledge-banking-a-technical-architecture-summary/what-are-credentials/","items":[{"title":"credentials and custodianship","url":"/old-work-archives/2018-webizen-net-au/about/knowledge-banking-a-technical-architecture-summary/what-are-credentials/credentials-and-custodianship/","items":[]},{"title":"DIDs and MultiSig","url":"/old-work-archives/2018-webizen-net-au/about/knowledge-banking-a-technical-architecture-summary/what-are-credentials/dids-and-multisig/","items":[]}]},{"title":"Personal Augmentation of AI","url":"/old-work-archives/2018-webizen-net-au/about/knowledge-banking-a-technical-architecture-summary/personal-augmentation-of-ai/","items":[]},{"title":"Semantic Inferencing","url":"/old-work-archives/2018-webizen-net-au/about/knowledge-banking-a-technical-architecture-summary/semantic-inferencing/","items":[]},{"title":"Web of Things (IoT+LD)","url":"/old-work-archives/2018-webizen-net-au/about/knowledge-banking-a-technical-architecture-summary/web-of-things-iotld/","items":[]}]},{"title":"References","url":"/old-work-archives/2018-webizen-net-au/about/references/","items":[{"title":"Making the distinction between ‘privacy’ and ‘dignity’.","url":"/old-work-archives/2018-webizen-net-au/about/references/privacy-vs-dignity/","items":[]},{"title":"Roles &#8211; Entity Analysis","url":"/old-work-archives/2018-webizen-net-au/about/references/roles-entity-analysis/","items":[]},{"title":"Social Informatics Design Considerations","url":"/old-work-archives/2018-webizen-net-au/about/references/social-informatics-design-concept-and-principles/","items":[]},{"title":"Socio-economic relations | A conceptual model","url":"/old-work-archives/2018-webizen-net-au/about/references/socioeconomic-relations-p1/","items":[]},{"title":"The need for decentralised Open (Linked) Data","url":"/old-work-archives/2018-webizen-net-au/about/references/the-need-for-decentralised-open-linked-data/","items":[]}]},{"title":"The design of new medium","url":"/old-work-archives/2018-webizen-net-au/about/the-design-of-new-medium/","items":[]},{"title":"The need to modernise socioeconomic infrastructure","url":"/old-work-archives/2018-webizen-net-au/about/the-modernisation-of-socioeconomics/","items":[]},{"title":"The Vision","url":"/old-work-archives/2018-webizen-net-au/about/the-vision/","items":[{"title":"Domesticating Pervasive Surveillance","url":"/old-work-archives/2018-webizen-net-au/about/the-vision/a-technical-vision/","items":[]}]}]},{"title":"An Overview","url":"/old-work-archives/2018-webizen-net-au/the-human-centric-infosphere/","items":[]},{"title":"Resource Library","url":"/old-work-archives/2018-webizen-net-au/resource-library/","items":[{"title":"awesomeLists","url":"","items":[{"title":"Awesome Computer Vision: Awesome","url":"/old-work-archives/2018-webizen-net-au/resource-library/awesomeLists/awesome-computer-vision/","items":[]},{"title":"Awesome Natural Language Generation Awesome","url":"/old-work-archives/2018-webizen-net-au/resource-library/awesomeLists/awsome-nl-gen/","items":[]},{"title":"Awesome Semantic Web Awesome","url":"/old-work-archives/2018-webizen-net-au/resource-library/awesomeLists/awesome-semweb/","items":[]},{"title":"Awesome-General","url":"/old-work-archives/2018-webizen-net-au/resource-library/awesomeLists/awesome-general/","items":[]}]},{"title":"Handong1587","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/","items":[{"title":"_Posts","url":"","items":[{"title":"Computer_science","url":"","items":[{"title":"Algorithm and Data Structure Resources","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/computer_science/2015-10-09-algo-resourses/","items":[]},{"title":"Artificial Intelligence Resources","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/computer_science/2015-10-09-ai-resources/","items":[]},{"title":"Big Data Resources","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/computer_science/2015-09-22-big-data-resources/","items":[]},{"title":"Computer Science Resources","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/computer_science/2015-10-01-cs-resources/","items":[]},{"title":"Data Mining Resources","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/computer_science/2015-10-09-data-mining-resources/","items":[]},{"title":"Data Science Resources","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/computer_science/2015-10-09-data-science-resources/","items":[]},{"title":"Database Systems Resources","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/computer_science/2015-10-01-database-resources/","items":[]},{"title":"Discrete Optimization Resources","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/computer_science/2015-10-01-discrete-optimization/","items":[]},{"title":"Distribued System Resources","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/computer_science/2015-12-12-ditributed-system-resources/","items":[]},{"title":"Funny Stuffs Of Computer Science","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/computer_science/2015-11-18-funny-stuffs-of-cs/","items":[]},{"title":"Robotics","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/computer_science/2015-09-26-robotics-resources/","items":[]},{"title":"Writting CS Papers","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/computer_science/2015-11-30-writing-papers/","items":[]}]},{"title":"Computer_vision","url":"","items":[{"title":"Computer Vision Datasets","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/computer_vision/2015-09-24-datasets/","items":[]},{"title":"Computer Vision Resources","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/computer_vision/2015-09-12-cv-resources/","items":[]},{"title":"Features","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/computer_vision/2015-10-09-features/","items":[]},{"title":"Recognition, Detection, Segmentation and Tracking","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/computer_vision/2015-10-09-recognition-detection-segmentation-tracking/","items":[]},{"title":"Use FFmpeg to Capture I Frames of Video","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/computer_vision/2016-03-03-ffmpeg-i-frame/","items":[]},{"title":"Working on OpenCV","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/computer_vision/2015-12-25-working-on-opencv/","items":[]}]},{"title":"Deep_learning","url":"","items":[{"title":"3D","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2021-07-28-3d/","items":[]},{"title":"Acceleration and Model Compression","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-cnn-compression-acceleration/","items":[]},{"title":"Acceleration and Model Compression","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-knowledge-distillation/","items":[]},{"title":"Adversarial Attacks and Defences","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-adversarial-attacks-and-defences/","items":[]},{"title":"Audio / Image / Video Generation","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-audio-image-video-generation/","items":[]},{"title":"BEV","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2022-06-27-bev/","items":[]},{"title":"Classification / Recognition","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-recognition/","items":[]},{"title":"Deep Learning and Autonomous Driving","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-autonomous-driving/","items":[]},{"title":"Deep Learning Applications","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-pose-estimation/","items":[]},{"title":"Deep Learning Applications","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-dl-applications/","items":[]},{"title":"Deep learning Courses","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-dl-courses/","items":[]},{"title":"Deep Learning Frameworks","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-dl-frameworks/","items":[]},{"title":"Deep Learning Resources","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-dl-resources/","items":[]},{"title":"Deep Learning Software and Hardware","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-dl-software-hardware/","items":[]},{"title":"Deep Learning Tricks","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-dl-tricks/","items":[]},{"title":"Deep Learning Tutorials","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-dl-tutorials/","items":[]},{"title":"Deep Learning with Machine Learning","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-dl-with-ml/","items":[]},{"title":"Face Recognition","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-face-recognition/","items":[]},{"title":"Fun With Deep Learning","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-fun-with-deep-learning/","items":[]},{"title":"Generative Adversarial Networks","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-gan/","items":[]},{"title":"Graph Convolutional Networks","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-gcn/","items":[]},{"title":"Image / Video Captioning","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-captioning/","items":[]},{"title":"Image Retrieval","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-retrieval/","items":[]},{"title":"Keep Up With New Trends","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2018-09-03-keep-up-with-new-trends/","items":[]},{"title":"LiDAR 3D Object Detection","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-lidar-3d-detection/","items":[]},{"title":"Natural Language Processing","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-nlp/","items":[]},{"title":"Neural Architecture Search","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-nas/","items":[]},{"title":"Object Counting","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-object-counting/","items":[]},{"title":"Object Detection","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-object-detection/","items":[]},{"title":"OCR","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-ocr/","items":[]},{"title":"Optical Flow","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-optical-flow/","items":[]},{"title":"Re-ID","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-re-id/","items":[]},{"title":"Recommendation System","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-recommendation-system/","items":[]},{"title":"Reinforcement Learning","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-rl/","items":[]},{"title":"RNN and LSTM","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-rnn-and-lstm/","items":[]},{"title":"Segmentation","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-segmentation/","items":[]},{"title":"Style Transfer","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-style-transfer/","items":[]},{"title":"Super-Resolution","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-super-resolution/","items":[]},{"title":"Tracking","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-tracking/","items":[]},{"title":"Training Deep Neural Networks","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-training-dnn/","items":[]},{"title":"Transfer Learning","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-transfer-learning/","items":[]},{"title":"Unsupervised Learning","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-unsupervised-learning/","items":[]},{"title":"Video Applications","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-video-applications/","items":[]},{"title":"Visual Question Answering","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-vqa/","items":[]},{"title":"Visualizing and Interpreting Convolutional Neural Network","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/deep_learning/2015-10-09-visulizing-interpreting-cnn/","items":[]}]},{"title":"Leisure","url":"","items":[{"title":"All About Enya","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/leisure/2015-12-21-all-about-enya/","items":[]},{"title":"Coldplay","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/leisure/2015-12-21-coldplay/","items":[]},{"title":"Coldplay","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/leisure/2015-12-21-nightwish/","items":[]},{"title":"Games","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/leisure/2015-12-13-games/","items":[]},{"title":"Green Day","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/leisure/2015-12-21-greenday/","items":[]},{"title":"Muse! Muse!","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/leisure/2015-12-21-muse-muse/","items":[]},{"title":"Oasis","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/leisure/2015-12-21-oasis/","items":[]},{"title":"Paintings By J.M.","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/leisure/2016-03-08-paintings-by-jm/","items":[]},{"title":"Papers, Blogs and Websites","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/leisure/2015-09-27-papers-blogs-and-websites/","items":[]},{"title":"Welcome To The Black Parade","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/leisure/2015-12-21-welcome-to-the-black-parade/","items":[]}]},{"title":"Machine_learning","url":"","items":[{"title":"Bayesian Methods","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/machine_learning/2015-08-27-bayesian-methods/","items":[]},{"title":"Clustering Algorithms Resources","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/machine_learning/2015-08-27-clustering/","items":[]},{"title":"Competitions","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/machine_learning/2015-08-27-competitions/","items":[]},{"title":"Dimensionality Reduction Resources","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/machine_learning/2015-08-27-dimensionality-reduction/","items":[]},{"title":"Fun With Machine Learning","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/machine_learning/2015-08-27-fun-with-ml/","items":[]},{"title":"Graphical Models Resources","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/machine_learning/2015-08-27-graphical-models/","items":[]},{"title":"Machine Learning Courses","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/machine_learning/2015-08-27-ml-courses/","items":[]},{"title":"Machine Learning Resources","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/machine_learning/2015-08-27-ml-resources/","items":[]},{"title":"Natural Language Processing","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/machine_learning/2015-08-27-nlp/","items":[]},{"title":"Neural Network","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/machine_learning/2015-08-27-neural-network/","items":[]},{"title":"Random Field","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/machine_learning/2015-08-27-random-field/","items":[]},{"title":"Random Forests","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/machine_learning/2015-08-27-random-forests/","items":[]},{"title":"Regression","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/machine_learning/2015-08-27-regression/","items":[]},{"title":"Support Vector Machine","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/machine_learning/2015-08-27-svm/","items":[]},{"title":"Topic Model","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/machine_learning/2015-08-27-topic-model/","items":[]}]},{"title":"Mathematics","url":"","items":[{"title":"Resources","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/mathematics/2016-02-24-resources/","items":[]}]},{"title":"Programming_study","url":"","items":[{"title":"Add Lunr Search Plugin For Blog","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/programming_study/2016-07-31-add-lunr-search-plugin-for-blog/","items":[]},{"title":"Android Development Resources","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/programming_study/2016-05-23-android-resources/","items":[]},{"title":"C++ Programming Solutions","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/programming_study/2016-09-07-cpp-programming-solutions/","items":[]},{"title":"Commands To Suppress Some Building Errors With Visual Studio","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/programming_study/2015-10-24-cmds-to-suppress-some-vs-building-Errors/","items":[]},{"title":"Embedding Python In C/C++","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/programming_study/2015-10-10-embedding-python-in-cpp/","items":[]},{"title":"Enable Large Addresses On VS2015","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/programming_study/2015-12-14-enable-large-addresses/","items":[]},{"title":"Fix min/max Error In VS2015","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/programming_study/2016-02-17-min-max-error-in-vs2015/","items":[]},{"title":"Gflags Build Problems on Windows X86 and Visual Studio 2015","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/programming_study/2015-10-23-gflags-build-problems-winx86-vs2015/","items":[]},{"title":"Glog Build Problems on Windows X86 and Visual Studio 2015","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/programming_study/2015-10-23-glog-build-problems-winx86/","items":[]},{"title":"Horrible Wired Errors Come From Simple Stupid Mistake","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/programming_study/2015-10-16-horrible-wired-errors-come-from-simple-stupid-mistake/","items":[]},{"title":"Install Jekyll To Fix Some Local Github-pages Defects","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/programming_study/2015-11-21-install-jekyll/","items":[]},{"title":"Install Therubyracer Failure","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/programming_study/2016-07-03-install-therubyracer/","items":[]},{"title":"Notes On Valgrind and Others","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/programming_study/2016-05-30-notes-on-valgrind/","items":[]},{"title":"PHP Hello World","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/programming_study/2016-07-04-php-hello-world/","items":[]},{"title":"Programming Resources","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/programming_study/2015-07-01-programming-resources/","items":[]},{"title":"PyInstsaller and Others","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/programming_study/2016-12-24-pyinstaller-and-others/","items":[]},{"title":"Web Development Resources","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/programming_study/2016-06-21-web-dev-resources/","items":[]},{"title":"Working on Visual Studio","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/programming_study/2016-04-03-working-on-vs/","items":[]}]},{"title":"Reading_and_thoughts","url":"","items":[{"title":"Book Reading List","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/reading_and_thoughts/2015-12-04-book-reading-list/","items":[]},{"title":"Funny Papers","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/reading_and_thoughts/2015-12-04-funny-papers/","items":[]},{"title":"Reading Materials","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/reading_and_thoughts/2016-01-18-reading-materials/","items":[]}]},{"title":"Study","url":"","items":[{"title":"Courses","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/study/2017-11-28-courses/","items":[]},{"title":"Essay Writting","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/study/2016-01-11-essay-writting/","items":[]},{"title":"Job Hunting","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/study/2016-06-02-job-hunting/","items":[]},{"title":"Study Resources","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/study/2018-04-18-resources/","items":[]}]},{"title":"Working_on_linux","url":"","items":[{"title":"Create Multiple Forks of a GitHub Repo","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/working_on_linux/2015-12-18-create-multi-forks/","items":[]},{"title":"Linux Git Commands","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/working_on_linux/2015-08-02-linux-git/","items":[]},{"title":"Linux Resources","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/working_on_linux/2015-07-24-linux-resources/","items":[]},{"title":"Linux SVN Commands","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/working_on_linux/2015-08-03-linux-svn/","items":[]},{"title":"Setup vsftpd on Ubuntu 14.10","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/working_on_linux/2016-07-27-setup-vsftpd/","items":[]},{"title":"Useful Linux Commands","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/working_on_linux/2015-07-25-useful-linux-commands/","items":[]},{"title":"vsftpd Commands","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/working_on_linux/2016-07-28-vsftpd-cmd/","items":[]}]},{"title":"Working_on_mac","url":"","items":[{"title":"Mac Resources","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/working_on_mac/2015-07-25-mac-resources/","items":[]}]},{"title":"Working_on_windows","url":"","items":[{"title":"FFmpeg Collection of Utility Methods","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/working_on_windows/2016-06-05-ffmpeg-utilities/","items":[]},{"title":"Windows Commands and Utilities","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/working_on_windows/2015-10-27-windows-cmds-utils/","items":[]},{"title":"Windows Dev Resources","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/_posts/working_on_windows/2015-10-27-resources/","items":[]}]}]},{"title":"Drafts","url":"","items":[{"title":"2016-12-30-Setup-Opengrok","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/drafts/2016-12-30-setup-opengrok/","items":[]},{"title":"2017-01-20-Packing-C++-Project-to-Single-Executable","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/drafts/2017-01-20-packing-c++-project-to-single-executable/","items":[]},{"title":"Notes On Caffe Development","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/drafts/2015-11-10-notes-on-caffe-dev/","items":[]},{"title":"Notes On Deep Learning Training","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/drafts/2015-12-12-notes-on-dl-training/","items":[]},{"title":"Notes On Discrete Optimization","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/drafts/2016-01-13-notes-on-discrete-optimization/","items":[]},{"title":"Notes On Gecode","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/drafts/2016-01-13-notes-on-gecode/","items":[]},{"title":"Notes On Inside-Outside Net","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/drafts/2015-12-28-notes-on-ion/","items":[]},{"title":"Notes On K-Means","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/drafts/2016-01-06-notes-on-kmeans/","items":[]},{"title":"Notes On L-BFGS","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/drafts/2015-12-07-notes-on-l-bfgs/","items":[]},{"title":"Notes On Object Detection","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/drafts/2015-11-04-notes-on-object-detection/","items":[]},{"title":"Notes On Perceptrons","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/drafts/2015-10-07-notes-on-perceptrons/","items":[]},{"title":"Notes On Quantized Convolutional Neural Networks","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/drafts/2016-01-07-notes-on-quantized-cnn/","items":[]},{"title":"Notes On Stanford CS2321n","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/drafts/2016-02-21-notes-on-cs231n/","items":[]},{"title":"Notes on Suffix Array and Manacher Algorithm","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/drafts/2015-08-27-notes-on-suffix-array-and-manacher-algorithm/","items":[]},{"title":"Notes On Tensorflow Development","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/drafts/2017-04-13-notes-on-tensorflow-dev/","items":[]},{"title":"Notes On YOLO","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/drafts/2015-12-14-notes-on-yolo/","items":[]},{"title":"PASCAL VOC (20) / COCO (80) / ImageNet (200) Detection Categories","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/drafts/2016-12-23-imagenet-det-cat/","items":[]},{"title":"Softmax Vs Logistic Vs Sigmoid","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/drafts/2015-12-10-softmax-logistic-sigmoid/","items":[]},{"title":"Spatial Pyramid Pooling in Deep Convolutional Networks for Visual Recognititon","url":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/drafts/2016-08-31-model-ensemble-of-deteciton/","items":[]}]}]}]}]}]},{"title":"Webizen 2.0","url":"","items":[{"title":"AI Capabilities","url":"","items":[{"title":"AI Capabilities Objectives","url":"/Webizen 2.0/AI Capabilities/AI Capabilities Objectives/","items":[]},{"title":"Audio & Video Analysis","url":"/Webizen 2.0/AI Capabilities/Audio & Video Analysis/","items":[]},{"title":"Image Analysis","url":"/Webizen 2.0/AI Capabilities/Image Analysis/","items":[]},{"title":"Text Analysis","url":"/Webizen 2.0/AI Capabilities/Text Analysis/","items":[]}]},{"title":"LOD-a-lot","url":"/Webizen 2.0/AI Related Links & Notes/","items":[]},{"title":"Mobile Apps","url":"","items":[{"title":"Android","url":"/Webizen 2.0/Mobile Apps/Android/","items":[]},{"title":"General Mobile Architecture","url":"/Webizen 2.0/Mobile Apps/General Mobile Architecture/","items":[]},{"title":"iOS","url":"/Webizen 2.0/Mobile Apps/iOS/","items":[]}]},{"title":"Web Of Things (IoT)","url":"","items":[{"title":"Web Of Things (IoT)","url":"/Webizen 2.0/Web Of Things (IoT)/Web Of Things (IoT)/","items":[]}]},{"title":"Webizen 2.0","url":"/Webizen 2.0/Webizen 2.0/","items":[]},{"title":"Webizen AI OS Platform","url":"/Webizen 2.0/Webizen AI OS Platform/","items":[]},{"title":"Webizen Pro Summary","url":"/Webizen 2.0/Webizen Pro Summary/","items":[]}]},{"title":"Webizen V1 Project Documentation","url":"/","items":[]}]}],"tagsGroups":[],"latestPosts":[{"fields":{"slug":"/","title":"Webizen V1 Project Documentation","lastUpdatedAt":"2022-12-28T20:55:56.000Z","lastUpdated":"12/28/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/old-work-archives/2018-webizen-net-au/about/knowledge-banking-a-technical-architecture-summary/","title":"Knowledge Banking: A Technical Architecture Summary","lastUpdatedAt":"2022-12-28T20:36:06.000Z","lastUpdated":"12/28/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/old-work-archives/2018-webizen-net-au/the-human-centric-infosphere/","title":"An Overview","lastUpdatedAt":"2022-12-28T20:26:34.000Z","lastUpdated":"12/28/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/old-work-archives/2018-webizen-net-au/about/the-design-of-new-medium/","title":"The design of new medium","lastUpdatedAt":"2022-12-28T20:26:34.000Z","lastUpdated":"12/28/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/old-work-archives/2018-webizen-net-au/about/the-modernisation-of-socioeconomics/","title":"The need to modernise socioeconomic infrastructure","lastUpdatedAt":"2022-12-28T20:26:34.000Z","lastUpdated":"12/28/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/old-work-archives/2018-webizen-net-au/about/the-vision/","title":"The Vision","lastUpdatedAt":"2022-12-28T20:26:34.000Z","lastUpdated":"12/28/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/old-work-archives/2018-webizen-net-au/resource-library/awesomeLists/awsome-nl-gen/","title":"Awesome Natural Language Generation Awesome","lastUpdatedAt":"2022-12-28T20:06:33.000Z","lastUpdated":"12/28/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/old-work-archives/2018-webizen-net-au/resource-library/awesomeLists/awesome-computer-vision/","title":"Awesome Computer Vision: Awesome","lastUpdatedAt":"2022-12-28T20:06:17.000Z","lastUpdated":"12/28/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/old-work-archives/2018-webizen-net-au/resource-library/handong1587/","title":"Handong1587","lastUpdatedAt":"2022-12-28T20:06:17.000Z","lastUpdated":"12/28/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/old-work-archives/2018-webizen-net-au/resource-library/awesomeLists/awesome-general/","title":"Awesome-General","lastUpdatedAt":"2022-12-28T20:06:17.000Z","lastUpdated":"12/28/2022"},"frontmatter":{"draft":false,"tags":[]}}]}},
    "staticQueryHashes": ["2230547434","2320115945","3495835395","451533639"]}