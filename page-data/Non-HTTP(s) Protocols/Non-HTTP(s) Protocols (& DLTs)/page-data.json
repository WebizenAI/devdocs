{
    "componentChunkName": "component---node-modules-gatsby-theme-primer-wiki-src-templates-post-query-js",
    "path": "/Non-HTTP(s) Protocols/Non-HTTP(s) Protocols (& DLTs)/",
    "result": {"data":{"mdx":{"id":"797a91e0-08b0-5815-81ef-53bb4718ed0f","tableOfContents":{},"fields":{"title":"Non-HTTP(s) Protocols (& DLTs)","slug":"/Non-HTTP(s) Protocols/Non-HTTP(s) Protocols (& DLTs)/","url":"https://devdocs.webizen.org/Non-HTTP(s) Protocols/Non-HTTP(s) Protocols (& DLTs)/","editUrl":"https://github.com/webizenai/devdocs/tree/main/Non-HTTP(s) Protocols/Non-HTTP(s) Protocols (& DLTs).md","lastUpdatedAt":"2022-12-28T13:53:25.000Z","lastUpdated":"12/28/2022","gitCreatedAt":"2022-12-28T13:53:25.000Z","shouldShowTitle":true},"frontmatter":{"title":"","description":null,"imageAlt":null,"tags":[],"date":null,"dateModified":null,"language":null,"seoTitle":null,"image":null},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Non-HTTP(s) protocols that run over internet are various, some are 'blockchains' many are not; yet broadly, they're called Decentralised Ledger Tables.\"), mdx(\"p\", null, \"Some examples include;\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Non-HTTP(s)%20Protocols/DAT/\",\n    \"title\": \"DAT\"\n  }, \"DAT\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Non-HTTP(s)%20Protocols/IPFS/\",\n    \"title\": \"IPFS\"\n  }, \"IPFS\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Non-HTTP(s)%20Protocols/WebTorrent/\",\n    \"title\": \"WebTorrent\"\n  }, \"WebTorrent\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Non-HTTP(s)%20Protocols/Lightning%20Network/\",\n    \"title\": \"Lightning Network\"\n  }, \"Lightning Network\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Non-HTTP(s)%20Protocols/GUNECO/\",\n    \"title\": \"GUNECO\"\n  }, \"GUNECO\"), \"\")), mdx(\"p\", null, \"These sorts of protocols are helpful for \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Core%20Services/Decentralised%20Ontologies/\",\n    \"title\": \"Decentralised Ontologies\"\n  }, \"Decentralised Ontologies\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Core%20Services/Permissive%20Commons/\",\n    \"title\": \"Permissive Commons\"\n  }, \"Permissive Commons\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Core%20Services/Verifiable%20Claims%20&%20Credentials/\",\n    \"title\": \"Verifiable Claims & Credentials\"\n  }, \"Verifiable Claims & Credentials\"), \" and in-turn also support for various forms of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Core%20Services/Webizen%20Socio-Economics/Currencies/\",\n    \"title\": \"Currencies\"\n  }, \"Currencies\"), \" (including Micro-Payments).\"), mdx(\"p\", null, \"Others, are still useful and important; but not DLTs, for example,\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Non-HTTP(s)%20Protocols/GIT/\",\n    \"title\": \"GIT\"\n  }, \"GIT\"), \" as is used for GitHub / GitLab, etc. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Non-HTTP(s)%20Protocols/WebRTC/\",\n    \"title\": \"WebRTC\"\n  }, \"WebRTC\"), \" As is used for Live Audio/Video Streaming\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Non-HTTP(s)%20Protocols/WebSockets/\",\n    \"title\": \"WebSockets\"\n  }, \"WebSockets\"), \" As is used for real-time notifications\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Host%20Service%20Requirements/Email%20Services/\",\n    \"title\": \"Email Services\"\n  }, \"Email Services\"), \" As does somewhat need to be supported somehow in the ecosystem.\")), mdx(\"p\", null, \"and there are many others. \"), mdx(\"p\", null, \"The methods are not seeking to suggest that any particular protocol (ie: web3 stuff) shouldn't be supported; but rather, that the design of these webizen systems requires HTTP(s) support. \"), mdx(\"p\", null, \"HTTP based protocols are also alot faster than many DLT solutions (depending on networking issues, etc.).\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawBody":"\nNon-HTTP(s) protocols that run over internet are various, some are 'blockchains' many are not; yet broadly, they're called Decentralised Ledger Tables.\n\nSome examples include;\n- [[DAT]]\n- [[IPFS]]\n- [[WebTorrent]]\n- [[Lightning Network]]\n- [[GUNECO]]\n\nThese sorts of protocols are helpful for [[Decentralised Ontologies]], [[Permissive Commons]], [[Verifiable Claims & Credentials]] and in-turn also support for various forms of [[Currencies]] (including Micro-Payments).\n\nOthers, are still useful and important; but not DLTs, for example,\n\n- [[GIT]] as is used for GitHub / GitLab, etc. \n- [[WebRTC]] As is used for Live Audio/Video Streaming\n- [[WebSockets]] As is used for real-time notifications\n- [[Email Services]] As does somewhat need to be supported somehow in the ecosystem.\n\nand there are many others. \n\nThe methods are not seeking to suggest that any particular protocol (ie: web3 stuff) shouldn't be supported; but rather, that the design of these webizen systems requires HTTP(s) support. \n\nHTTP based protocols are also alot faster than many DLT solutions (depending on networking issues, etc.).\n\n","excerpt":"Non-HTTP(s) protocols that run over internet are various, some are 'blockchains' many are not; yet broadly, they're called Decentralised Leâ€¦","outboundReferences":[{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/Host Service Requirements/Email Services/","title":"Email Services","shouldShowTitle":true}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/Non-HTTP(s) Protocols/GUNECO/","title":"GUNECO","shouldShowTitle":true}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/Non-HTTP(s) Protocols/IPFS/","title":"IPFS","shouldShowTitle":true}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/Non-HTTP(s) Protocols/WebRTC/","title":"WebRTC","shouldShowTitle":true}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/Non-HTTP(s) Protocols/WebSockets/","title":"WebSockets","shouldShowTitle":true}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/Non-HTTP(s) Protocols/WebTorrent/","title":"WebTorrent","shouldShowTitle":true}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The Context of the term Ontologies for this project, is about the use of RDF ontologies or moreover 'semantic web' parts.\"), mdx(\"p\", null, \"There has been a historic and long-term problem with temporal resolution of 'web' (WWW) content.  This problem has also impacted the availability of 'ontologies', which are the structured vocabularies (semantics) that support the development and use of applications that are dependant upon those ontologies.  In-turn also, ontologies change overtime; whereas the HTTP URI may not. \"), mdx(\"p\", null, \"Then there is also the problem that the use of public (hosted somewhere) ontological resources (particularly in relation to 'commons' information) is often accessed via an API during runtime.  So, the implication becomes a form of API based survellience in relation to activities of humans. \"), mdx(\"p\", null, \"So in summary; It is desirable to have,\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"ontologies stored locally (or at least within a 'private network' env) \"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"An ability to manage 'versions' of an ontology that remain 'static'\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"An ability to assert access control (Read/Write/Append); in a manner that takes into account social factors (ie: stewards vs. consumers / dependents)\")), mdx(\"p\", null, \"So the purpose of decentralised ontologies (which is part of the Permissive Commons ecosystems) is to create an information systems framework that supports the ability for different authoritative actors / agents (inc. groups) to produce different ontologies and manage the authorship of them; whilst also enabling users to download a copy of those ontologies for use locally (with a semantic / AI agent); and therefore also, any applications that depend upon those ontologies being available, no-longer rely upon whether they're still availalbe on the HTTP URI where they were originally published; but rather, on the DLT (decentralised ledger technology) still being available somewhere.  \"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/Core Services/Decentralised Ontologies/","title":"Decentralised Ontologies","shouldShowTitle":true}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Permissive Commons is in-fact similar to the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Core%20Services/Decentralised%20Ontologies/\",\n    \"title\": \"Decentralised Ontologies\"\n  }, \"Decentralised Ontologies\"), \" however the scope of 'hyper-media' assets is broader than simply any RDF based assets; and the two are interoperable.\"), mdx(\"p\", null, \"The Permissive Commons concept is like an advancement of 'open-data', whilst adding more functionality as a consequence of the abillity to use permission structures in relation to assets.\"), mdx(\"p\", null, \"There are a few different 'usecases' relating to the use of 'permissive commons'. \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"The Public Commons\"), \"\\nThe first is what would generally be considered 'open data' or information / artifacts of knowledge that pertain to and/or are counterparts to the essential knowledge artifacts required to support human rights.  \"), mdx(\"p\", null, \"The historical context of what these sorts of assets 'look like'; include but are not limited to,\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Languages\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Encylopedias (knowledge about our biosphere)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Liberal Arts related artifacts\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"STEM related artifacts (including but not exclusive to statistics)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Laws\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Works that are no-longer protected by Copyright Rights (public domain works)\")), mdx(\"p\", null, \"The nature of how these assets are made available online has changed the 'media format' of the content in various ways.  This in-turn produces an array of new 'functionality' or artifact constituencies that did not exist in previous media (plural of medium) formats, as is illustrated in various types of formats both online and in physical and/or inter-personally communicated formats.   Historically, there has generally been a publisher of whatever the artifacts are; although, the fuller body of knowledge about that particular topic or thing, may have artifacts create / published by many entities. \"), mdx(\"p\", null, \"More recently, an incredibly significant dependence has developed upon the use of a few websites only to make available 'commons' information.  \"), mdx(\"p\", null, \"In almost all circumstances, the abillity to add more information about something to 'commons' resources - requires some sort of permission or indeed also, attribution - even if only to protect from the potential implications of wrong-doers... \"), mdx(\"p\", null, \"In other circumstances, its quite important that there is a valid 'authority' associated to the publication of some kind of commons resource; an example could be the legislative information about a particular law made by a government / parliament in some particular juristiction; where the ability to read is made public, and the application of the 'law' is intended to be defined upon all people; but that the creation of that law, requires a particular process involving specified persons.\"), mdx(\"p\", null, \"In other situations; for example, the development of a software project using 'github' or similar; or the collaborative development of a document or spreadsheet using an application like 'google docs', the permission structures may be different; indeed, it may be restricted to a particular group or components may be restricted to a particular group (ie: the development of a new version). SO, whilst these sorts of examples are still 'commons' between those people involved; it is also 'permissioned' in a particular sort of way.  This then brings about a consideration about how new systems may in-turn offer solutions for problems that haven't been able to be addressed earlier; such as,\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The abilty to associate compensation to 'knowledge' works, whether that be via a licensing model that applies the same costs equally to all types of 'consumers' or whether it differentiates between different types of consumers, based on particular characteristics, etc. \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"The ability to track a process of compensating a person for useful works in a way, that can support the ability to employ 'micropayments' via some sort of defined model; to provide fair compensation for work that a person has done, as is defined electronically; and then, once that fair-compensation amount has been renumerated, the license / permissions are changed.  The point being, that people who do work for the good of humanity should be paid fairly for their useful contributions; but that also, they should not be paid in perpetuity as to seek rents, in a way that would harm the ability to support 'freedom of thought'.  \"))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Technical Description\")), mdx(\"p\", null, \"Permissive commons uses a variety of different DLT (Decentralised Ledger Technologies) protocols, noting different protocols better suit different types of applications / use-cases. \"), mdx(\"p\", null, \"Each 'entity' has its own 'graph' (pointed graph); whereby elements of that graph can be downloaded to parse the machine-readable format of the data-structures for use by the local agent (or a linked agent within a users personal or 'trusted' network).\"), mdx(\"p\", null, \"Concept or Entity Centric \\\"Containers\\\"\"), mdx(\"p\", null, \"An example is to describe a particular type of Plant; i'll pick a Melaleuca.\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Melaleuca\"\n  }, \"https://en.wikipedia.org/wiki/Melaleuca\")), mdx(\"p\", null, \"Therein - the 'permissive commons' container(s) for that 'thing' would include all sorts of information that describes all the different bits and pieces of information known about a mellaleuca; including, both microscopic & macroscopic information; and the ability to store 'identification' information for use by a AI processor (ie: to identify any melaleuca in photos, etc.).\"), mdx(\"p\", null, \"This then employs the ontological structures to support AI processing for the information about whatever the topic is; and, users are then able to produce new content, that references via URIs the concepts that they're communicating in a manner that is linked to the graph about that particular topic, concept or thing.\"), mdx(\"p\", null, \"The storage of information about each 'concept' is intended to support provonance, and any alterations provide links to previous versions; alongside an ability to form semantic inferencing notations about any meaningful relations between the concepts / topics noted earlier as may be effected by updates. \"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Core%20Services/Temporal%20Semantics/\",\n    \"title\": \"Temporal Semantics\"\n  }, \"Temporal Semantics\"), \"\\nFor example; is a news-article was written about a particular topic in reliance of a particular 'fact' that was believed to be 'true' at the time; but later, new information shows that the old assumption was in-fact incorrect.  The permissive commons engine would support the ability to contextualise the information both from a perspective of when that article or piece of content was written; and, as the manifest underlying assumptions or representations - whether it be about the circumstances of that time, or any changes that have happened since - can in-turn be contextualised for observers (users), temporallly.\"), mdx(\"p\", null, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Core%20Services/Verifiable%20Claims%20&%20Credentials/\",\n    \"title\": \"Verifiable Claims & Credentials\"\n  }, \"Verifiable Claims & Credentials\"), \"\"), mdx(\"p\", null, \"The verifiable claims element, has various applications / implications; including, the ability to support provonance in relation to who did what; and in-turn, any terms that may relate to those contributions.  \"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/Core Services/Permissive Commons/","title":"Permissive Commons","shouldShowTitle":true}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Verifiable Claims work has developed and morphed into what they call 'verifiable credentials'.  \"), mdx(\"p\", null, \"The purpose of 'verifiable claims' is to create a cryptographically signed (tamper evident) container that can contain 'data' that can be relied upon as an instrument of 'fact' (regardless of whether or not the claims in it, are factual).  IE: The fact is, i have this 'verifiable claim' that was generated in relation to XYZ or XYZ circumstance, it clearly states 'these things' or provides 'xyz' information from \\\"Alice\\\" or 'bob' or 'acme .inc' which may be used as a instrument for electronic contracts.\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/Core Services/Verifiable Claims & Credentials/","title":"Verifiable Claims & Credentials","shouldShowTitle":true}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://dat-ecosystem.org/\"\n  }, \"https://dat-ecosystem.org/\"), \" \"), mdx(\"p\", null, \"DAT protocol is now called HyperCore Protocol. \"), mdx(\"p\", null, \"(Unable to find go library - TBA)\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/Non-HTTP(s) Protocols/DAT/","title":"DAT","shouldShowTitle":true}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/go-git/go-git\"\n  }, \"https://github.com/go-git/go-git\")));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/Non-HTTP(s) Protocols/GIT/","title":"GIT","shouldShowTitle":true}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The Lightning network provides an interface for performing transactions that are in-turn supported by the bitcoin protocol.  \"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/lightningnetwork/lnd\"\n  }, \"https://github.com/lightningnetwork/lnd\")));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/Non-HTTP(s) Protocols/Lightning Network/","title":"Lightning Network","shouldShowTitle":true}},{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The Webizen Stack intends to produce support for an array of different 'currencies', whereby the term itself isn't simply or solely about money, but also various other factors relating to a broader semantic concept of socio-economic and biosphere interactions, in particular (there are others).\"), mdx(\"p\", null, \"Support for Micropayments is incredibly important, yet the modelling for how micropayments are achieved also needs to take into consideration the cost of energy and other supply / distribution chain related costing frameworks. \"), mdx(\"p\", null, \"Similar yet differently, are various forms of 'social currencies', which on the present-day web are fairly simple; such as how many views or likes or 'friends' an 'account' has; yet, it may be a bot that has been set-up for socially narfarious purposes.\"), mdx(\"p\", null, \"In other parts of our social fabric - there's issues where it is not easy for people to declare and communicate that they've been going down some difficult path of trying to talk about an important topic with integrity; and that they've been harmed for doing so during a time where others didn't understand, and when others start to learn about the realities of whatever it is they were talking about earlier (getting harmed); then, there's no benefit - others take over, whilst their 'social reputation' is still damaged for having spoken about it earlier when the statements were unpopular.  Conversely also; people who make popular statements, that are later found false.\"), mdx(\"p\", null, \"Some of these considerations are explored further in the document about \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Core%20Services/Safety%20Protocols/Social%20Factors/Social%20Attack%20Vectors/\",\n    \"title\": \"Social Attack Vectors\"\n  }, \"Social Attack Vectors\"), \" alongside the objective outline about \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Core%20Services/Safety%20Protocols/Social%20Factors/Ending%20Digital%20Slavery/\",\n    \"title\": \"Ending Digital Slavery\"\n  }, \"Ending Digital Slavery\"), \".\"), mdx(\"p\", null, \"Another area of interest is about 'learning' or 'knowledge' currencies', whereby the activities that people are able to be shown to have both done and understood; creates some sort of acknowledgement benefit, that may help them better qualify themselves for particular kinds of activities (ie: work).\"), mdx(\"p\", null, \"There are many different types of 'currencies' and part of the webizen project / process, is to explore how they may be made to work - for the betterment of human kind. \"), mdx(\"h3\", {\n    \"id\": \"considerations-about-ai--human-dignity-inc-privacy\"\n  }, \"Considerations about AI & Human Dignity (inc. privacy)\"), mdx(\"p\", null, \"Whilst many are fearful of a 'social credit score' or similar; the reality is that these systems already exist, its just that they're operating in a way that's very poor / morally improveraged. \"), mdx(\"p\", null, \"Whether or not 'consumers' are aware of the vast amount of information about people that is collected by alternative systems, website and web-related services; the difference between exposing and modelling how these sorts of things could (or 'should') work, is actually far better than setting it aside - which doesn't mean others aren't aware of these metrics, rather, that the 'data subject' (the target) is unaware of it.   So the objective is to turn that around, so that the people who the statistics or (social) currencies relate to - are more aware of it, than any other.\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/Core Services/Webizen Socio-Economics/Currencies/","title":"Currencies","shouldShowTitle":true}}],"inboundReferences":[]},"tagsOutbound":{"nodes":[]}},"pageContext":{"tags":[],"slug":"/Non-HTTP(s) Protocols/Non-HTTP(s) Protocols (& DLTs)/","sidebarItems":[{"title":"Categories","items":[{"title":"Attachments","url":"","items":[{"title":"Slides Demo","url":"/Attachments/Slides demo/","items":[]}]},{"title":"Commercial","url":"","items":[{"title":"Centricity","url":"/Commercial/Centricity/","items":[]},{"title":"Community of Practice","url":"/Commercial/Community of Practice/","items":[]},{"title":"Domains","url":"/Commercial/Domains/","items":[]},{"title":"Webizen Alliance","url":"/Commercial/Webizen Alliance/","items":[]}]},{"title":"Core Services","url":"","items":[{"title":"Decentralised Ontologies","url":"/Core Services/Decentralised Ontologies/","items":[]},{"title":"Permissive Commons","url":"/Core Services/Permissive Commons/","items":[]},{"title":"Safety Protocols","url":"","items":[{"title":"Safety Protocols","url":"/Core Services/Safety Protocols/Safety Protocols/","items":[]},{"title":"Social Factors","url":"","items":[{"title":"Best Efforts","url":"/Core Services/Safety Protocols/Social Factors/Best Efforts/","items":[]},{"title":"Ending Digital Slavery","url":"/Core Services/Safety Protocols/Social Factors/Ending Digital Slavery/","items":[]},{"title":"Freedom of Thought","url":"/Core Services/Safety Protocols/Social Factors/Freedom of Thought/","items":[]},{"title":"No Golden Handcuffs","url":"/Core Services/Safety Protocols/Social Factors/No Golden Handcuffs/","items":[]},{"title":"Relationships (Social)","url":"/Core Services/Safety Protocols/Social Factors/Relationships (Social)/","items":[]},{"title":"Social Attack Vectors","url":"/Core Services/Safety Protocols/Social Factors/Social Attack Vectors/","items":[]},{"title":"The Webizen Charter","url":"/Core Services/Safety Protocols/Social Factors/The Webizen Charter/","items":[]}]},{"title":"Values Credentials","url":"/Core Services/Safety Protocols/Values Credentials/","items":[]}]},{"title":"Temporal Semantics","url":"/Core Services/Temporal Semantics/","items":[]},{"title":"Verifiable Claims & Credentials","url":"/Core Services/Verifiable Claims & Credentials/","items":[]},{"title":"Webizen Socio-Economics","url":"","items":[{"title":"Biosphere Ontologies","url":"/Core Services/Webizen Socio-Economics/Biosphere Ontologies/","items":[]},{"title":"Currencies","url":"/Core Services/Webizen Socio-Economics/Currencies/","items":[]},{"title":"SocioSphere Ontologies","url":"/Core Services/Webizen Socio-Economics/SocioSphere Ontologies/","items":[]},{"title":"Sustainable Development Goals (ESG)","url":"/Core Services/Webizen Socio-Economics/Sustainable Development Goals (ESG)/","items":[]}]}]},{"title":"Core Technologies","url":"","items":[{"title":"AUTH","url":"","items":[{"title":"Authentication Fabric","url":"/Core Technologies/AUTH/Authentication Fabric/","items":[]}]},{"title":"Query Interfaces","url":"","items":[{"title":"GraphQL","url":"/Core Technologies/Query Interfaces/GraphQL/","items":[]}]},{"title":"Webizen App Spec","url":"","items":[{"title":"SemWebSpecs","url":"","items":[{"title":"Core Ontologies","url":"","items":[{"title":"FOAF","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/Core Ontologies/FOAF/","items":[]},{"title":"General Ontology Information","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/Core Ontologies/General Ontology Information/","items":[]},{"title":"MD-RDF Ontologies","url":"","items":[{"title":"DataTypesOntology (DTO) Core","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/Core Ontologies/MD-RDF Ontologies/DataTypes Ontology/","items":[]},{"title":"Friend of a Friend (FOAF) Core","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/Core Ontologies/MD-RDF Ontologies/FOAF/","items":[]}]},{"title":"OWL","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/Core Ontologies/OWL/","items":[]},{"title":"RDF Schema 1.1","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/Core Ontologies/RDFS/","items":[]},{"title":"Sitemap","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/Core Ontologies/Sitemap/","items":[]},{"title":"SKOS","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/Core Ontologies/SKOS/","items":[]},{"title":"SOIC","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/Core Ontologies/SOIC/","items":[]}]},{"title":"Semantic Web - Introduction","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/Semantic Web - Introduction/","items":[]},{"title":"SemWeb-AUTH","url":"","items":[{"title":"WebID-OIDC","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/SemWeb-AUTH/WebID-OIDC/","items":[]},{"title":"WebID-RSA","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/SemWeb-AUTH/WebID-RSA/","items":[]},{"title":"WebID-TLS","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/SemWeb-AUTH/WebID-TLS/","items":[]}]},{"title":"Sparql","url":"","items":[{"title":"Sparql Family","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/Sparql/Sparql Family/","items":[]}]},{"title":"W3C Specifications","url":"","items":[{"title":"Linked Data Fragments","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/W3C Specifications/Linked Data Fragments/","items":[]},{"title":"Linked Data Notifications","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/W3C Specifications/Linked Data Notifications/","items":[]},{"title":"Linked Data Platform","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/W3C Specifications/Linked Data Platform/","items":[]},{"title":"Linked Media Fragments","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/W3C Specifications/Linked Media Fragments/","items":[]},{"title":"RDF","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/W3C Specifications/RDF/","items":[]},{"title":"Web Access Control (WAC)","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/W3C Specifications/Web Access Control (WAC)/","items":[]},{"title":"Web Of Things","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/W3C Specifications/Web Of Things/","items":[]},{"title":"WebID","url":"/Core Technologies/Webizen App Spec/SemWebSpecs/W3C Specifications/WebID/","items":[]}]}]},{"title":"Webizen App Spec 1.0","url":"/Core Technologies/Webizen App Spec/Webizen App Spec 1.0/","items":[]},{"title":"WebSpec","url":"","items":[{"title":"HTML SPECS","url":"/Core Technologies/Webizen App Spec/WebSpec/HTML SPECS/","items":[]},{"title":"WebPlatformTools","url":"","items":[{"title":"WebAuthn","url":"/Core Technologies/Webizen App Spec/WebSpec/WebPlatformTools/WebAuthn/","items":[]},{"title":"WebDav","url":"/Core Technologies/Webizen App Spec/WebSpec/WebPlatformTools/WebDav/","items":[]}]}]}]}]},{"title":"Data Applications","url":"/Data Applications/","items":[]},{"title":"Database Requirements","url":"","items":[{"title":"Database Alternatives","url":"","items":[{"title":"Akutan","url":"/Database requirements/Database Alternatives/akutan/","items":[]},{"title":"CayleyGraph","url":"/Database requirements/Database Alternatives/CayleyGraph/","items":[]}]},{"title":"Database Methods","url":"","items":[{"title":"GraphQL","url":"/Database requirements/Database methods/GraphQL/","items":[]},{"title":"Sparql","url":"/Database requirements/Database methods/Sparql/","items":[]}]}]},{"title":"Host Service Requirements","url":"","items":[{"title":"Domain Hosting","url":"/Host Service Requirements/Domain Hosting/","items":[]},{"title":"Email Services","url":"/Host Service Requirements/Email Services/","items":[]},{"title":"LD_PostOffice_SemanticMGR","url":"/Host Service Requirements/LD_PostOffice_SemanticMGR/","items":[]},{"title":"Media Processing","url":"/Host Service Requirements/Media Processing/","items":[{"title":"Ffmpeg","url":"/Host Service Requirements/Media Processing/ffmpeg/","items":[]},{"title":"Opencv","url":"/Host Service Requirements/Media Processing/opencv/","items":[]}]},{"title":"Website Host","url":"/Host Service Requirements/Website Host/","items":[]}]},{"title":"ICT Stack","url":"","items":[{"title":"General References","url":"","items":[{"title":"List of Protocols ISO Model","url":"/ICT Stack/General References/List of Protocols ISO model/","items":[]}]},{"title":"Internet","url":"","items":[{"title":"Internet Stack","url":"/ICT Stack/Internet/Internet Stack/","items":[]}]}]},{"title":"Implementation V1","url":"","items":[{"title":"App-Design-Sdk-V1","url":"","items":[{"title":"Core Apps","url":"","items":[{"title":"Agent Directory","url":"/Implementation V1/App-design-sdk-v1/Core Apps/Agent Directory/","items":[]},{"title":"Credentials & Contracts Manager","url":"/Implementation V1/App-design-sdk-v1/Core Apps/Credentials & Contracts Manager/","items":[]},{"title":"File (Package) Manager","url":"/Implementation V1/App-design-sdk-v1/Core Apps/File (package) Manager/","items":[]},{"title":"Temporal Apps","url":"","items":[{"title":"Calendar","url":"/Implementation V1/App-design-sdk-v1/Core Apps/Temporal Apps/Calendar/","items":[]},{"title":"Timeline Interface","url":"/Implementation V1/App-design-sdk-v1/Core Apps/Temporal Apps/Timeline Interface/","items":[]}]},{"title":"Webizen Apps (V1)","url":"/Implementation V1/App-design-sdk-v1/Core Apps/Webizen Apps (v1)/","items":[]},{"title":"Webizen Manager","url":"/Implementation V1/App-design-sdk-v1/Core Apps/Webizen Manager/","items":[]}]},{"title":"Design Goals","url":"","items":[{"title":"Design Goals Overview","url":"/Implementation V1/App-design-sdk-v1/Design Goals/Design Goals Overview/","items":[]}]}]},{"title":"Edge","url":"","items":[{"title":"Webizen Local App Functionality","url":"/Implementation V1/edge/Webizen Local App Functionality/","items":[]}]},{"title":"GoLang Libraries","url":"/Implementation V1/GoLang Libraries/","items":[]},{"title":"Implementation V1 Summary","url":"/Implementation V1/Implementation V1 Summary/","items":[]},{"title":"Vps","url":"","items":[{"title":"Server Functionality Summary (VPS)","url":"/Implementation V1/vps/Server Functionality Summary (VPS)/","items":[]}]},{"title":"Webizen 1.0","url":"/Implementation V1/Webizen 1.0/","items":[]},{"title":"Webizen-Connect","url":"","items":[{"title":"Social Media APIs","url":"/Implementation V1/Webizen-Connect/Social Media APIs/","items":[]},{"title":"Webizen-Connect (Summary)","url":"/Implementation V1/Webizen-Connect/Webizen-Connect (summary)/","items":[]}]}]},{"title":"Non-HTTP(s) Protocols","url":"","items":[{"title":"DAT","url":"/Non-HTTP(s) Protocols/DAT/","items":[]},{"title":"GIT","url":"/Non-HTTP(s) Protocols/GIT/","items":[]},{"title":"GUNECO","url":"/Non-HTTP(s) Protocols/GUNECO/","items":[]},{"title":"IPFS","url":"/Non-HTTP(s) Protocols/IPFS/","items":[]},{"title":"Lightning Network","url":"/Non-HTTP(s) Protocols/Lightning Network/","items":[]},{"title":"Non-HTTP(s) Protocols (& DLTs)","url":"/Non-HTTP(s) Protocols/Non-HTTP(s) Protocols (& DLTs)/","items":[]},{"title":"WebRTC","url":"/Non-HTTP(s) Protocols/WebRTC/","items":[]},{"title":"WebSockets","url":"/Non-HTTP(s) Protocols/WebSockets/","items":[]},{"title":"WebTorrent","url":"/Non-HTTP(s) Protocols/WebTorrent/","items":[]}]},{"title":"Obsibian Template for Gatsby Theme Primer Wiki","url":"/old-README/","items":[]},{"title":"Start Here","url":"/Start here/","items":[]},{"title":"UDHR","url":"/UDHR/","items":[]},{"title":"Webizen 2.0","url":"","items":[{"title":"AI Capabilities","url":"","items":[{"title":"AI Capabilities Objectives","url":"/Webizen 2.0/AI Capabilities/AI Capabilities Objectives/","items":[]},{"title":"Audio & Video Analysis","url":"/Webizen 2.0/AI Capabilities/Audio & Video Analysis/","items":[]},{"title":"Image Analysis","url":"/Webizen 2.0/AI Capabilities/Image Analysis/","items":[]},{"title":"Text Analysis","url":"/Webizen 2.0/AI Capabilities/Text Analysis/","items":[]}]},{"title":"LOD-a-lot","url":"/Webizen 2.0/AI Related Links & Notes/","items":[]},{"title":"Mobile Apps","url":"","items":[{"title":"Android","url":"/Webizen 2.0/Mobile Apps/Android/","items":[]},{"title":"General Mobile Architecture","url":"/Webizen 2.0/Mobile Apps/General Mobile Architecture/","items":[]},{"title":"iOS","url":"/Webizen 2.0/Mobile Apps/iOS/","items":[]}]},{"title":"Web Of Things (IoT)","url":"","items":[{"title":"Web Of Things (IoT)","url":"/Webizen 2.0/Web Of Things (IoT)/Web Of Things (IoT)/","items":[]}]},{"title":"Webizen 2.0","url":"/Webizen 2.0/Webizen 2.0/","items":[]},{"title":"Webizen AI OS Platform","url":"/Webizen 2.0/Webizen AI OS Platform/","items":[]},{"title":"Webizen Pro Summary","url":"/Webizen 2.0/Webizen Pro Summary/","items":[]}]},{"title":"Webizen Docs Go Project","url":"/","items":[]}]}],"tagsGroups":[],"latestPosts":[{"fields":{"slug":"/Host Service Requirements/Email Services/","title":"Email Services","lastUpdatedAt":"2022-12-28T13:53:25.000Z","lastUpdated":"12/28/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Host Service Requirements/LD_PostOffice_SemanticMGR/","title":"LD_PostOffice_SemanticMGR","lastUpdatedAt":"2022-12-28T13:53:25.000Z","lastUpdated":"12/28/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Host Service Requirements/Media Processing/","title":"Media Processing","lastUpdatedAt":"2022-12-28T13:53:25.000Z","lastUpdated":"12/28/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Non-HTTP(s) Protocols/GUNECO/","title":"GUNECO","lastUpdatedAt":"2022-12-28T13:53:25.000Z","lastUpdated":"12/28/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Non-HTTP(s) Protocols/IPFS/","title":"IPFS","lastUpdatedAt":"2022-12-28T13:53:25.000Z","lastUpdated":"12/28/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Non-HTTP(s) Protocols/WebRTC/","title":"WebRTC","lastUpdatedAt":"2022-12-28T13:53:25.000Z","lastUpdated":"12/28/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Non-HTTP(s) Protocols/WebSockets/","title":"WebSockets","lastUpdatedAt":"2022-12-28T13:53:25.000Z","lastUpdated":"12/28/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Non-HTTP(s) Protocols/WebTorrent/","title":"WebTorrent","lastUpdatedAt":"2022-12-28T13:53:25.000Z","lastUpdated":"12/28/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Core Services/Webizen Socio-Economics/Sustainable Development Goals (ESG)/","title":"Sustainable Development Goals (ESG)","lastUpdatedAt":"2022-12-28T13:53:25.000Z","lastUpdated":"12/28/2022"},"frontmatter":{"draft":false,"tags":[]}},{"fields":{"slug":"/Core Technologies/Query Interfaces/GraphQL/","title":"GraphQL","lastUpdatedAt":"2022-12-28T13:53:25.000Z","lastUpdated":"12/28/2022"},"frontmatter":{"draft":false,"tags":[]}}]}},
    "staticQueryHashes": ["2230547434","2320115945","3495835395","451533639"]}